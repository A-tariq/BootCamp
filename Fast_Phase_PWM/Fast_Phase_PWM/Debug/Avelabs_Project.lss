
Avelabs_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fba  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000100e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000100e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001040  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  0000107c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000958  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006a6  00000000  00000000  00001ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ad9  00000000  00000000  0000215a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000250  00000000  00000000  00002c34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ae  00000000  00000000  00002e84  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000425  00000000  00000000  00003332  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00003757  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 36       	cpi	r26, 0x60	; 96
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 c2 02 	call	0x584	; 0x584 <main>
  74:	0c 94 db 07 	jmp	0xfb6	; 0xfb6 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_WritePin>:
	else
	bit_status = 0 ;
	
	return bit_status ;
	
}
  7c:	cf 93       	push	r28
  7e:	df 93       	push	r29
  80:	00 d0       	rcall	.+0      	; 0x82 <DIO_WritePin+0x6>
  82:	cd b7       	in	r28, 0x3d	; 61
  84:	de b7       	in	r29, 0x3e	; 62
  86:	89 83       	std	Y+1, r24	; 0x01
  88:	6a 83       	std	Y+2, r22	; 0x02
  8a:	8a 81       	ldd	r24, Y+2	; 0x02
  8c:	88 23       	and	r24, r24
  8e:	09 f0       	breq	.+2      	; 0x92 <DIO_WritePin+0x16>
  90:	78 c0       	rjmp	.+240    	; 0x182 <DIO_WritePin+0x106>
  92:	89 81       	ldd	r24, Y+1	; 0x01
  94:	88 30       	cpi	r24, 0x08	; 8
  96:	c8 f4       	brcc	.+50     	; 0xca <DIO_WritePin+0x4e>
  98:	8b e3       	ldi	r24, 0x3B	; 59
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	2b e3       	ldi	r18, 0x3B	; 59
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	f9 01       	movw	r30, r18
  a2:	20 81       	ld	r18, Z
  a4:	62 2f       	mov	r22, r18
  a6:	29 81       	ldd	r18, Y+1	; 0x01
  a8:	22 2f       	mov	r18, r18
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	a9 01       	movw	r20, r18
  ae:	47 70       	andi	r20, 0x07	; 7
  b0:	55 27       	eor	r21, r21
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <DIO_WritePin+0x40>
  b8:	22 0f       	add	r18, r18
  ba:	33 1f       	adc	r19, r19
  bc:	4a 95       	dec	r20
  be:	e2 f7       	brpl	.-8      	; 0xb8 <DIO_WritePin+0x3c>
  c0:	20 95       	com	r18
  c2:	26 23       	and	r18, r22
  c4:	fc 01       	movw	r30, r24
  c6:	20 83       	st	Z, r18
  c8:	5c c0       	rjmp	.+184    	; 0x182 <DIO_WritePin+0x106>
  ca:	89 81       	ldd	r24, Y+1	; 0x01
  cc:	88 30       	cpi	r24, 0x08	; 8
  ce:	e0 f0       	brcs	.+56     	; 0x108 <DIO_WritePin+0x8c>
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	80 31       	cpi	r24, 0x10	; 16
  d4:	c8 f4       	brcc	.+50     	; 0x108 <DIO_WritePin+0x8c>
  d6:	88 e3       	ldi	r24, 0x38	; 56
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	28 e3       	ldi	r18, 0x38	; 56
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	f9 01       	movw	r30, r18
  e0:	20 81       	ld	r18, Z
  e2:	62 2f       	mov	r22, r18
  e4:	29 81       	ldd	r18, Y+1	; 0x01
  e6:	22 2f       	mov	r18, r18
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	a9 01       	movw	r20, r18
  ec:	47 70       	andi	r20, 0x07	; 7
  ee:	55 27       	eor	r21, r21
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_WritePin+0x7e>
  f6:	22 0f       	add	r18, r18
  f8:	33 1f       	adc	r19, r19
  fa:	4a 95       	dec	r20
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_WritePin+0x7a>
  fe:	20 95       	com	r18
 100:	26 23       	and	r18, r22
 102:	fc 01       	movw	r30, r24
 104:	20 83       	st	Z, r18
 106:	3d c0       	rjmp	.+122    	; 0x182 <DIO_WritePin+0x106>
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	80 31       	cpi	r24, 0x10	; 16
 10c:	e0 f0       	brcs	.+56     	; 0x146 <DIO_WritePin+0xca>
 10e:	89 81       	ldd	r24, Y+1	; 0x01
 110:	88 31       	cpi	r24, 0x18	; 24
 112:	c8 f4       	brcc	.+50     	; 0x146 <DIO_WritePin+0xca>
 114:	85 e3       	ldi	r24, 0x35	; 53
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	25 e3       	ldi	r18, 0x35	; 53
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	f9 01       	movw	r30, r18
 11e:	20 81       	ld	r18, Z
 120:	62 2f       	mov	r22, r18
 122:	29 81       	ldd	r18, Y+1	; 0x01
 124:	22 2f       	mov	r18, r18
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	a9 01       	movw	r20, r18
 12a:	47 70       	andi	r20, 0x07	; 7
 12c:	55 27       	eor	r21, r21
 12e:	21 e0       	ldi	r18, 0x01	; 1
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	02 c0       	rjmp	.+4      	; 0x138 <DIO_WritePin+0xbc>
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	4a 95       	dec	r20
 13a:	e2 f7       	brpl	.-8      	; 0x134 <DIO_WritePin+0xb8>
 13c:	20 95       	com	r18
 13e:	26 23       	and	r18, r22
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	1e c0       	rjmp	.+60     	; 0x182 <DIO_WritePin+0x106>
 146:	89 81       	ldd	r24, Y+1	; 0x01
 148:	88 31       	cpi	r24, 0x18	; 24
 14a:	d8 f0       	brcs	.+54     	; 0x182 <DIO_WritePin+0x106>
 14c:	89 81       	ldd	r24, Y+1	; 0x01
 14e:	80 32       	cpi	r24, 0x20	; 32
 150:	c0 f4       	brcc	.+48     	; 0x182 <DIO_WritePin+0x106>
 152:	82 e3       	ldi	r24, 0x32	; 50
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	22 e3       	ldi	r18, 0x32	; 50
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	f9 01       	movw	r30, r18
 15c:	20 81       	ld	r18, Z
 15e:	62 2f       	mov	r22, r18
 160:	29 81       	ldd	r18, Y+1	; 0x01
 162:	22 2f       	mov	r18, r18
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	a9 01       	movw	r20, r18
 168:	47 70       	andi	r20, 0x07	; 7
 16a:	55 27       	eor	r21, r21
 16c:	21 e0       	ldi	r18, 0x01	; 1
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	02 c0       	rjmp	.+4      	; 0x176 <DIO_WritePin+0xfa>
 172:	22 0f       	add	r18, r18
 174:	33 1f       	adc	r19, r19
 176:	4a 95       	dec	r20
 178:	e2 f7       	brpl	.-8      	; 0x172 <DIO_WritePin+0xf6>
 17a:	20 95       	com	r18
 17c:	26 23       	and	r18, r22
 17e:	fc 01       	movw	r30, r24
 180:	20 83       	st	Z, r18
 182:	8a 81       	ldd	r24, Y+2	; 0x02
 184:	81 30       	cpi	r24, 0x01	; 1
 186:	09 f0       	breq	.+2      	; 0x18a <DIO_WritePin+0x10e>
 188:	75 c0       	rjmp	.+234    	; 0x274 <DIO_WritePin+0x1f8>
 18a:	89 81       	ldd	r24, Y+1	; 0x01
 18c:	88 30       	cpi	r24, 0x08	; 8
 18e:	c0 f4       	brcc	.+48     	; 0x1c0 <DIO_WritePin+0x144>
 190:	8b e3       	ldi	r24, 0x3B	; 59
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	2b e3       	ldi	r18, 0x3B	; 59
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	f9 01       	movw	r30, r18
 19a:	20 81       	ld	r18, Z
 19c:	62 2f       	mov	r22, r18
 19e:	29 81       	ldd	r18, Y+1	; 0x01
 1a0:	22 2f       	mov	r18, r18
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	a9 01       	movw	r20, r18
 1a6:	47 70       	andi	r20, 0x07	; 7
 1a8:	55 27       	eor	r21, r21
 1aa:	21 e0       	ldi	r18, 0x01	; 1
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_WritePin+0x138>
 1b0:	22 0f       	add	r18, r18
 1b2:	33 1f       	adc	r19, r19
 1b4:	4a 95       	dec	r20
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_WritePin+0x134>
 1b8:	26 2b       	or	r18, r22
 1ba:	fc 01       	movw	r30, r24
 1bc:	20 83       	st	Z, r18
 1be:	5a c0       	rjmp	.+180    	; 0x274 <DIO_WritePin+0x1f8>
 1c0:	89 81       	ldd	r24, Y+1	; 0x01
 1c2:	88 30       	cpi	r24, 0x08	; 8
 1c4:	d8 f0       	brcs	.+54     	; 0x1fc <DIO_WritePin+0x180>
 1c6:	89 81       	ldd	r24, Y+1	; 0x01
 1c8:	80 31       	cpi	r24, 0x10	; 16
 1ca:	c0 f4       	brcc	.+48     	; 0x1fc <DIO_WritePin+0x180>
 1cc:	88 e3       	ldi	r24, 0x38	; 56
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	28 e3       	ldi	r18, 0x38	; 56
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	f9 01       	movw	r30, r18
 1d6:	20 81       	ld	r18, Z
 1d8:	62 2f       	mov	r22, r18
 1da:	29 81       	ldd	r18, Y+1	; 0x01
 1dc:	22 2f       	mov	r18, r18
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	a9 01       	movw	r20, r18
 1e2:	47 70       	andi	r20, 0x07	; 7
 1e4:	55 27       	eor	r21, r21
 1e6:	21 e0       	ldi	r18, 0x01	; 1
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_WritePin+0x174>
 1ec:	22 0f       	add	r18, r18
 1ee:	33 1f       	adc	r19, r19
 1f0:	4a 95       	dec	r20
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_WritePin+0x170>
 1f4:	26 2b       	or	r18, r22
 1f6:	fc 01       	movw	r30, r24
 1f8:	20 83       	st	Z, r18
 1fa:	3c c0       	rjmp	.+120    	; 0x274 <DIO_WritePin+0x1f8>
 1fc:	89 81       	ldd	r24, Y+1	; 0x01
 1fe:	80 31       	cpi	r24, 0x10	; 16
 200:	d8 f0       	brcs	.+54     	; 0x238 <DIO_WritePin+0x1bc>
 202:	89 81       	ldd	r24, Y+1	; 0x01
 204:	88 31       	cpi	r24, 0x18	; 24
 206:	c0 f4       	brcc	.+48     	; 0x238 <DIO_WritePin+0x1bc>
 208:	85 e3       	ldi	r24, 0x35	; 53
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	25 e3       	ldi	r18, 0x35	; 53
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	f9 01       	movw	r30, r18
 212:	20 81       	ld	r18, Z
 214:	62 2f       	mov	r22, r18
 216:	29 81       	ldd	r18, Y+1	; 0x01
 218:	22 2f       	mov	r18, r18
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	a9 01       	movw	r20, r18
 21e:	47 70       	andi	r20, 0x07	; 7
 220:	55 27       	eor	r21, r21
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_WritePin+0x1b0>
 228:	22 0f       	add	r18, r18
 22a:	33 1f       	adc	r19, r19
 22c:	4a 95       	dec	r20
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_WritePin+0x1ac>
 230:	26 2b       	or	r18, r22
 232:	fc 01       	movw	r30, r24
 234:	20 83       	st	Z, r18
 236:	1e c0       	rjmp	.+60     	; 0x274 <DIO_WritePin+0x1f8>
 238:	89 81       	ldd	r24, Y+1	; 0x01
 23a:	88 31       	cpi	r24, 0x18	; 24
 23c:	d8 f0       	brcs	.+54     	; 0x274 <DIO_WritePin+0x1f8>
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	80 32       	cpi	r24, 0x20	; 32
 242:	c0 f4       	brcc	.+48     	; 0x274 <DIO_WritePin+0x1f8>
 244:	82 e3       	ldi	r24, 0x32	; 50
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	22 e3       	ldi	r18, 0x32	; 50
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	f9 01       	movw	r30, r18
 24e:	20 81       	ld	r18, Z
 250:	62 2f       	mov	r22, r18
 252:	29 81       	ldd	r18, Y+1	; 0x01
 254:	22 2f       	mov	r18, r18
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	a9 01       	movw	r20, r18
 25a:	47 70       	andi	r20, 0x07	; 7
 25c:	55 27       	eor	r21, r21
 25e:	21 e0       	ldi	r18, 0x01	; 1
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_WritePin+0x1ec>
 264:	22 0f       	add	r18, r18
 266:	33 1f       	adc	r19, r19
 268:	4a 95       	dec	r20
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_WritePin+0x1e8>
 26c:	26 2b       	or	r18, r22
 26e:	fc 01       	movw	r30, r24
 270:	20 83       	st	Z, r18
 272:	00 c0       	rjmp	.+0      	; 0x274 <DIO_WritePin+0x1f8>
 274:	00 00       	nop
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	08 95       	ret

00000280 <DIO_TogglePin>:
 280:	cf 93       	push	r28
 282:	df 93       	push	r29
 284:	1f 92       	push	r1
 286:	cd b7       	in	r28, 0x3d	; 61
 288:	de b7       	in	r29, 0x3e	; 62
 28a:	89 83       	std	Y+1, r24	; 0x01
 28c:	89 81       	ldd	r24, Y+1	; 0x01
 28e:	88 30       	cpi	r24, 0x08	; 8
 290:	c0 f4       	brcc	.+48     	; 0x2c2 <DIO_TogglePin+0x42>
 292:	8b e3       	ldi	r24, 0x3B	; 59
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	2b e3       	ldi	r18, 0x3B	; 59
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	f9 01       	movw	r30, r18
 29c:	20 81       	ld	r18, Z
 29e:	62 2f       	mov	r22, r18
 2a0:	29 81       	ldd	r18, Y+1	; 0x01
 2a2:	22 2f       	mov	r18, r18
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	a9 01       	movw	r20, r18
 2a8:	47 70       	andi	r20, 0x07	; 7
 2aa:	55 27       	eor	r21, r21
 2ac:	21 e0       	ldi	r18, 0x01	; 1
 2ae:	30 e0       	ldi	r19, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_TogglePin+0x36>
 2b2:	22 0f       	add	r18, r18
 2b4:	33 1f       	adc	r19, r19
 2b6:	4a 95       	dec	r20
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_TogglePin+0x32>
 2ba:	26 27       	eor	r18, r22
 2bc:	fc 01       	movw	r30, r24
 2be:	20 83       	st	Z, r18
 2c0:	5a c0       	rjmp	.+180    	; 0x376 <DIO_TogglePin+0xf6>
 2c2:	89 81       	ldd	r24, Y+1	; 0x01
 2c4:	88 30       	cpi	r24, 0x08	; 8
 2c6:	d8 f0       	brcs	.+54     	; 0x2fe <DIO_TogglePin+0x7e>
 2c8:	89 81       	ldd	r24, Y+1	; 0x01
 2ca:	80 31       	cpi	r24, 0x10	; 16
 2cc:	c0 f4       	brcc	.+48     	; 0x2fe <DIO_TogglePin+0x7e>
 2ce:	88 e3       	ldi	r24, 0x38	; 56
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	28 e3       	ldi	r18, 0x38	; 56
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	f9 01       	movw	r30, r18
 2d8:	20 81       	ld	r18, Z
 2da:	62 2f       	mov	r22, r18
 2dc:	29 81       	ldd	r18, Y+1	; 0x01
 2de:	22 2f       	mov	r18, r18
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	a9 01       	movw	r20, r18
 2e4:	47 70       	andi	r20, 0x07	; 7
 2e6:	55 27       	eor	r21, r21
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <DIO_TogglePin+0x72>
 2ee:	22 0f       	add	r18, r18
 2f0:	33 1f       	adc	r19, r19
 2f2:	4a 95       	dec	r20
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <DIO_TogglePin+0x6e>
 2f6:	26 27       	eor	r18, r22
 2f8:	fc 01       	movw	r30, r24
 2fa:	20 83       	st	Z, r18
 2fc:	3c c0       	rjmp	.+120    	; 0x376 <DIO_TogglePin+0xf6>
 2fe:	89 81       	ldd	r24, Y+1	; 0x01
 300:	80 31       	cpi	r24, 0x10	; 16
 302:	d8 f0       	brcs	.+54     	; 0x33a <DIO_TogglePin+0xba>
 304:	89 81       	ldd	r24, Y+1	; 0x01
 306:	88 31       	cpi	r24, 0x18	; 24
 308:	c0 f4       	brcc	.+48     	; 0x33a <DIO_TogglePin+0xba>
 30a:	85 e3       	ldi	r24, 0x35	; 53
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	25 e3       	ldi	r18, 0x35	; 53
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	f9 01       	movw	r30, r18
 314:	20 81       	ld	r18, Z
 316:	62 2f       	mov	r22, r18
 318:	29 81       	ldd	r18, Y+1	; 0x01
 31a:	22 2f       	mov	r18, r18
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	a9 01       	movw	r20, r18
 320:	47 70       	andi	r20, 0x07	; 7
 322:	55 27       	eor	r21, r21
 324:	21 e0       	ldi	r18, 0x01	; 1
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <DIO_TogglePin+0xae>
 32a:	22 0f       	add	r18, r18
 32c:	33 1f       	adc	r19, r19
 32e:	4a 95       	dec	r20
 330:	e2 f7       	brpl	.-8      	; 0x32a <DIO_TogglePin+0xaa>
 332:	26 27       	eor	r18, r22
 334:	fc 01       	movw	r30, r24
 336:	20 83       	st	Z, r18
 338:	1e c0       	rjmp	.+60     	; 0x376 <DIO_TogglePin+0xf6>
 33a:	89 81       	ldd	r24, Y+1	; 0x01
 33c:	88 31       	cpi	r24, 0x18	; 24
 33e:	d8 f0       	brcs	.+54     	; 0x376 <DIO_TogglePin+0xf6>
 340:	89 81       	ldd	r24, Y+1	; 0x01
 342:	80 32       	cpi	r24, 0x20	; 32
 344:	c0 f4       	brcc	.+48     	; 0x376 <DIO_TogglePin+0xf6>
 346:	82 e3       	ldi	r24, 0x32	; 50
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	22 e3       	ldi	r18, 0x32	; 50
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	f9 01       	movw	r30, r18
 350:	20 81       	ld	r18, Z
 352:	62 2f       	mov	r22, r18
 354:	29 81       	ldd	r18, Y+1	; 0x01
 356:	22 2f       	mov	r18, r18
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	a9 01       	movw	r20, r18
 35c:	47 70       	andi	r20, 0x07	; 7
 35e:	55 27       	eor	r21, r21
 360:	21 e0       	ldi	r18, 0x01	; 1
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	02 c0       	rjmp	.+4      	; 0x36a <DIO_TogglePin+0xea>
 366:	22 0f       	add	r18, r18
 368:	33 1f       	adc	r19, r19
 36a:	4a 95       	dec	r20
 36c:	e2 f7       	brpl	.-8      	; 0x366 <DIO_TogglePin+0xe6>
 36e:	26 27       	eor	r18, r22
 370:	fc 01       	movw	r30, r24
 372:	20 83       	st	Z, r18
 374:	00 c0       	rjmp	.+0      	; 0x376 <DIO_TogglePin+0xf6>
 376:	00 00       	nop
 378:	0f 90       	pop	r0
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	08 95       	ret

00000380 <DIO_SetPinDirection>:
void DIO_SetPinDirection(uint8 PinNum,uint8 PinDirection){
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	00 d0       	rcall	.+0      	; 0x386 <DIO_SetPinDirection+0x6>
 386:	cd b7       	in	r28, 0x3d	; 61
 388:	de b7       	in	r29, 0x3e	; 62
 38a:	89 83       	std	Y+1, r24	; 0x01
 38c:	6a 83       	std	Y+2, r22	; 0x02
	if(PinDirection == 0)
 38e:	8a 81       	ldd	r24, Y+2	; 0x02
 390:	88 23       	and	r24, r24
 392:	09 f0       	breq	.+2      	; 0x396 <DIO_SetPinDirection+0x16>
 394:	78 c0       	rjmp	.+240    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
	{
		if( (PinNum >= 0) && (PinNum <= 7)){
 396:	89 81       	ldd	r24, Y+1	; 0x01
 398:	88 30       	cpi	r24, 0x08	; 8
 39a:	c8 f4       	brcc	.+50     	; 0x3ce <DIO_SetPinDirection+0x4e>
			Clear_Bit(DDRA,(PinNum%8));
 39c:	8a e3       	ldi	r24, 0x3A	; 58
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	2a e3       	ldi	r18, 0x3A	; 58
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	f9 01       	movw	r30, r18
 3a6:	20 81       	ld	r18, Z
 3a8:	62 2f       	mov	r22, r18
 3aa:	29 81       	ldd	r18, Y+1	; 0x01
 3ac:	22 2f       	mov	r18, r18
 3ae:	30 e0       	ldi	r19, 0x00	; 0
 3b0:	a9 01       	movw	r20, r18
 3b2:	47 70       	andi	r20, 0x07	; 7
 3b4:	55 27       	eor	r21, r21
 3b6:	21 e0       	ldi	r18, 0x01	; 1
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_SetPinDirection+0x40>
 3bc:	22 0f       	add	r18, r18
 3be:	33 1f       	adc	r19, r19
 3c0:	4a 95       	dec	r20
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_SetPinDirection+0x3c>
 3c4:	20 95       	com	r18
 3c6:	26 23       	and	r18, r22
 3c8:	fc 01       	movw	r30, r24
 3ca:	20 83       	st	Z, r18
 3cc:	5c c0       	rjmp	.+184    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
		}
		else if( (PinNum >= 8) && (PinNum <= 15)){
 3ce:	89 81       	ldd	r24, Y+1	; 0x01
 3d0:	88 30       	cpi	r24, 0x08	; 8
 3d2:	e0 f0       	brcs	.+56     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3d4:	89 81       	ldd	r24, Y+1	; 0x01
 3d6:	80 31       	cpi	r24, 0x10	; 16
 3d8:	c8 f4       	brcc	.+50     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
			Clear_Bit(DDRB,(PinNum%8));
 3da:	87 e3       	ldi	r24, 0x37	; 55
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	27 e3       	ldi	r18, 0x37	; 55
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	f9 01       	movw	r30, r18
 3e4:	20 81       	ld	r18, Z
 3e6:	62 2f       	mov	r22, r18
 3e8:	29 81       	ldd	r18, Y+1	; 0x01
 3ea:	22 2f       	mov	r18, r18
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	a9 01       	movw	r20, r18
 3f0:	47 70       	andi	r20, 0x07	; 7
 3f2:	55 27       	eor	r21, r21
 3f4:	21 e0       	ldi	r18, 0x01	; 1
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_SetPinDirection+0x7e>
 3fa:	22 0f       	add	r18, r18
 3fc:	33 1f       	adc	r19, r19
 3fe:	4a 95       	dec	r20
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_SetPinDirection+0x7a>
 402:	20 95       	com	r18
 404:	26 23       	and	r18, r22
 406:	fc 01       	movw	r30, r24
 408:	20 83       	st	Z, r18
 40a:	3d c0       	rjmp	.+122    	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
		}
		else if( (PinNum >= 16) && (PinNum <= 23)){
 40c:	89 81       	ldd	r24, Y+1	; 0x01
 40e:	80 31       	cpi	r24, 0x10	; 16
 410:	e0 f0       	brcs	.+56     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 412:	89 81       	ldd	r24, Y+1	; 0x01
 414:	88 31       	cpi	r24, 0x18	; 24
 416:	c8 f4       	brcc	.+50     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
			Clear_Bit(DDRC,(PinNum%8));
 418:	84 e3       	ldi	r24, 0x34	; 52
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	24 e3       	ldi	r18, 0x34	; 52
 41e:	30 e0       	ldi	r19, 0x00	; 0
 420:	f9 01       	movw	r30, r18
 422:	20 81       	ld	r18, Z
 424:	62 2f       	mov	r22, r18
 426:	29 81       	ldd	r18, Y+1	; 0x01
 428:	22 2f       	mov	r18, r18
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	a9 01       	movw	r20, r18
 42e:	47 70       	andi	r20, 0x07	; 7
 430:	55 27       	eor	r21, r21
 432:	21 e0       	ldi	r18, 0x01	; 1
 434:	30 e0       	ldi	r19, 0x00	; 0
 436:	02 c0       	rjmp	.+4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 438:	22 0f       	add	r18, r18
 43a:	33 1f       	adc	r19, r19
 43c:	4a 95       	dec	r20
 43e:	e2 f7       	brpl	.-8      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 440:	20 95       	com	r18
 442:	26 23       	and	r18, r22
 444:	fc 01       	movw	r30, r24
 446:	20 83       	st	Z, r18
 448:	1e c0       	rjmp	.+60     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
		}
		else if( (PinNum >=24) && (PinNum <= 31)) {
 44a:	89 81       	ldd	r24, Y+1	; 0x01
 44c:	88 31       	cpi	r24, 0x18	; 24
 44e:	d8 f0       	brcs	.+54     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 450:	89 81       	ldd	r24, Y+1	; 0x01
 452:	80 32       	cpi	r24, 0x20	; 32
 454:	c0 f4       	brcc	.+48     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
			Clear_Bit(DDRD,(PinNum%8));
 456:	81 e3       	ldi	r24, 0x31	; 49
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	21 e3       	ldi	r18, 0x31	; 49
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	f9 01       	movw	r30, r18
 460:	20 81       	ld	r18, Z
 462:	62 2f       	mov	r22, r18
 464:	29 81       	ldd	r18, Y+1	; 0x01
 466:	22 2f       	mov	r18, r18
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	a9 01       	movw	r20, r18
 46c:	47 70       	andi	r20, 0x07	; 7
 46e:	55 27       	eor	r21, r21
 470:	21 e0       	ldi	r18, 0x01	; 1
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 476:	22 0f       	add	r18, r18
 478:	33 1f       	adc	r19, r19
 47a:	4a 95       	dec	r20
 47c:	e2 f7       	brpl	.-8      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 47e:	20 95       	com	r18
 480:	26 23       	and	r18, r22
 482:	fc 01       	movw	r30, r24
 484:	20 83       	st	Z, r18
		}
	}
	if(PinDirection == 1)
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	81 30       	cpi	r24, 0x01	; 1
 48a:	09 f0       	breq	.+2      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 48c:	75 c0       	rjmp	.+234    	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
	{
		if( (PinNum >= 0) && (PinNum <= 7)){
 48e:	89 81       	ldd	r24, Y+1	; 0x01
 490:	88 30       	cpi	r24, 0x08	; 8
 492:	c0 f4       	brcc	.+48     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
			Set_Bit(DDRA,(PinNum%8));
 494:	8a e3       	ldi	r24, 0x3A	; 58
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	2a e3       	ldi	r18, 0x3A	; 58
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	f9 01       	movw	r30, r18
 49e:	20 81       	ld	r18, Z
 4a0:	62 2f       	mov	r22, r18
 4a2:	29 81       	ldd	r18, Y+1	; 0x01
 4a4:	22 2f       	mov	r18, r18
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	a9 01       	movw	r20, r18
 4aa:	47 70       	andi	r20, 0x07	; 7
 4ac:	55 27       	eor	r21, r21
 4ae:	21 e0       	ldi	r18, 0x01	; 1
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b4:	22 0f       	add	r18, r18
 4b6:	33 1f       	adc	r19, r19
 4b8:	4a 95       	dec	r20
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4bc:	26 2b       	or	r18, r22
 4be:	fc 01       	movw	r30, r24
 4c0:	20 83       	st	Z, r18
		}
		else if( (PinNum >=24) && (PinNum <= 31)) {
			Set_Bit(DDRD,(PinNum%8));
		}
	}
 4c2:	5a c0       	rjmp	.+180    	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
	if(PinDirection == 1)
	{
		if( (PinNum >= 0) && (PinNum <= 7)){
			Set_Bit(DDRA,(PinNum%8));
		}
		else if( (PinNum >= 8) && (PinNum <= 15)){
 4c4:	89 81       	ldd	r24, Y+1	; 0x01
 4c6:	88 30       	cpi	r24, 0x08	; 8
 4c8:	d8 f0       	brcs	.+54     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ca:	89 81       	ldd	r24, Y+1	; 0x01
 4cc:	80 31       	cpi	r24, 0x10	; 16
 4ce:	c0 f4       	brcc	.+48     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
			Set_Bit(DDRB,(PinNum%8));
 4d0:	87 e3       	ldi	r24, 0x37	; 55
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	27 e3       	ldi	r18, 0x37	; 55
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	f9 01       	movw	r30, r18
 4da:	20 81       	ld	r18, Z
 4dc:	62 2f       	mov	r22, r18
 4de:	29 81       	ldd	r18, Y+1	; 0x01
 4e0:	22 2f       	mov	r18, r18
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	a9 01       	movw	r20, r18
 4e6:	47 70       	andi	r20, 0x07	; 7
 4e8:	55 27       	eor	r21, r21
 4ea:	21 e0       	ldi	r18, 0x01	; 1
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4f0:	22 0f       	add	r18, r18
 4f2:	33 1f       	adc	r19, r19
 4f4:	4a 95       	dec	r20
 4f6:	e2 f7       	brpl	.-8      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4f8:	26 2b       	or	r18, r22
 4fa:	fc 01       	movw	r30, r24
 4fc:	20 83       	st	Z, r18
 4fe:	3c c0       	rjmp	.+120    	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
		}
		else if( (PinNum >= 16) && (PinNum <= 23)){
 500:	89 81       	ldd	r24, Y+1	; 0x01
 502:	80 31       	cpi	r24, 0x10	; 16
 504:	d8 f0       	brcs	.+54     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 506:	89 81       	ldd	r24, Y+1	; 0x01
 508:	88 31       	cpi	r24, 0x18	; 24
 50a:	c0 f4       	brcc	.+48     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
			Set_Bit(DDRC,(PinNum%8));
 50c:	84 e3       	ldi	r24, 0x34	; 52
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	24 e3       	ldi	r18, 0x34	; 52
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	f9 01       	movw	r30, r18
 516:	20 81       	ld	r18, Z
 518:	62 2f       	mov	r22, r18
 51a:	29 81       	ldd	r18, Y+1	; 0x01
 51c:	22 2f       	mov	r18, r18
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	a9 01       	movw	r20, r18
 522:	47 70       	andi	r20, 0x07	; 7
 524:	55 27       	eor	r21, r21
 526:	21 e0       	ldi	r18, 0x01	; 1
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	22 0f       	add	r18, r18
 52e:	33 1f       	adc	r19, r19
 530:	4a 95       	dec	r20
 532:	e2 f7       	brpl	.-8      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 534:	26 2b       	or	r18, r22
 536:	fc 01       	movw	r30, r24
 538:	20 83       	st	Z, r18
 53a:	1e c0       	rjmp	.+60     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
		}
		else if( (PinNum >=24) && (PinNum <= 31)) {
 53c:	89 81       	ldd	r24, Y+1	; 0x01
 53e:	88 31       	cpi	r24, 0x18	; 24
 540:	d8 f0       	brcs	.+54     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 542:	89 81       	ldd	r24, Y+1	; 0x01
 544:	80 32       	cpi	r24, 0x20	; 32
 546:	c0 f4       	brcc	.+48     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
			Set_Bit(DDRD,(PinNum%8));
 548:	81 e3       	ldi	r24, 0x31	; 49
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	21 e3       	ldi	r18, 0x31	; 49
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	f9 01       	movw	r30, r18
 552:	20 81       	ld	r18, Z
 554:	62 2f       	mov	r22, r18
 556:	29 81       	ldd	r18, Y+1	; 0x01
 558:	22 2f       	mov	r18, r18
 55a:	30 e0       	ldi	r19, 0x00	; 0
 55c:	a9 01       	movw	r20, r18
 55e:	47 70       	andi	r20, 0x07	; 7
 560:	55 27       	eor	r21, r21
 562:	21 e0       	ldi	r18, 0x01	; 1
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 568:	22 0f       	add	r18, r18
 56a:	33 1f       	adc	r19, r19
 56c:	4a 95       	dec	r20
 56e:	e2 f7       	brpl	.-8      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 570:	26 2b       	or	r18, r22
 572:	fc 01       	movw	r30, r24
 574:	20 83       	st	Z, r18
		}
	}
 576:	00 c0       	rjmp	.+0      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 578:	00 00       	nop
 57a:	0f 90       	pop	r0
 57c:	0f 90       	pop	r0
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	08 95       	ret

00000584 <main>:
#include "includes/motor.h"
//#include <avr/interrupt.h>
uint8 motor_dir = CLOCKWISE ;

int main(void)
{
 584:	cf 93       	push	r28
 586:	df 93       	push	r29
 588:	cd b7       	in	r28, 0x3d	; 61
 58a:	de b7       	in	r29, 0x3e	; 62
	timer0_init(CTC_MODE,256,SET_MODE);
 58c:	42 e0       	ldi	r20, 0x02	; 2
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	71 e0       	ldi	r23, 0x01	; 1
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	0e 94 4c 03 	call	0x698	; 0x698 <timer0_init>
	DIO_SetPinDirection(PINB5,OUTPUT);
 598:	61 e0       	ldi	r22, 0x01	; 1
 59a:	8d e0       	ldi	r24, 0x0D	; 13
 59c:	0e 94 c0 01 	call	0x380	; 0x380 <DIO_SetPinDirection>
	DIO_WritePin(PINB5,ON);
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	8d e0       	ldi	r24, 0x0D	; 13
 5a4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
	init_DC_Motor_1(PHASE_PWM_MODE);
 5a8:	83 e0       	ldi	r24, 0x03	; 3
 5aa:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <init_DC_Motor_1>
   //init_DC_Motor_2(FAST_PWM_MODE);
	
    
	while (1)
	{
        DIO_WritePin(PINB5,OFF);
 5ae:	60 e0       	ldi	r22, 0x00	; 0
 5b0:	8d e0       	ldi	r24, 0x0D	; 13
 5b2:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
        stop_motor_1();
 5b6:	0e 94 3c 03 	call	0x678	; 0x678 <stop_motor_1>
        timer0_delay_ms(3000);
 5ba:	68 eb       	ldi	r22, 0xB8	; 184
 5bc:	7b e0       	ldi	r23, 0x0B	; 11
 5be:	80 e0       	ldi	r24, 0x00	; 0
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 91 07 	call	0xf22	; 0xf22 <timer0_delay_ms>
        change_motor_1_dir();
 5c6:	0e 94 2e 03 	call	0x65c	; 0x65c <change_motor_1_dir>
		DIO_WritePin(PINB5,ON);
 5ca:	61 e0       	ldi	r22, 0x01	; 1
 5cc:	8d e0       	ldi	r24, 0x0D	; 13
 5ce:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
	    timer0_delay_ms(3000);
 5d2:	68 eb       	ldi	r22, 0xB8	; 184
 5d4:	7b e0       	ldi	r23, 0x0B	; 11
 5d6:	80 e0       	ldi	r24, 0x00	; 0
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 91 07 	call	0xf22	; 0xf22 <timer0_delay_ms>

	}
 5de:	e7 cf       	rjmp	.-50     	; 0x5ae <main+0x2a>

000005e0 <init_DC_Motor_1>:
	DIO_SetPinDirection(MOTOR_2_DIR_B,OUTPUT);
	DIO_WritePin(MOTOR_2_DIR_A,OFF);
	DIO_WritePin(MOTOR_2_DIR_B,ON);
	DIO_WritePin(MOTOR_2_EN,OFF);

}
 5e0:	cf 93       	push	r28
 5e2:	df 93       	push	r29
 5e4:	1f 92       	push	r1
 5e6:	cd b7       	in	r28, 0x3d	; 61
 5e8:	de b7       	in	r29, 0x3e	; 62
 5ea:	89 83       	std	Y+1, r24	; 0x01
 5ec:	87 e4       	ldi	r24, 0x47	; 71
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	2f ee       	ldi	r18, 0xEF	; 239
 5f2:	fc 01       	movw	r30, r24
 5f4:	20 83       	st	Z, r18
 5f6:	86 e4       	ldi	r24, 0x46	; 70
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	2f ee       	ldi	r18, 0xEF	; 239
 5fc:	fc 01       	movw	r30, r24
 5fe:	20 83       	st	Z, r18
 600:	89 e4       	ldi	r24, 0x49	; 73
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	2f e7       	ldi	r18, 0x7F	; 127
 606:	fc 01       	movw	r30, r24
 608:	20 83       	st	Z, r18
 60a:	88 e4       	ldi	r24, 0x48	; 72
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	2f e7       	ldi	r18, 0x7F	; 127
 610:	fc 01       	movw	r30, r24
 612:	20 83       	st	Z, r18
 614:	21 e0       	ldi	r18, 0x01	; 1
 616:	42 e0       	ldi	r20, 0x02	; 2
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	89 81       	ldd	r24, Y+1	; 0x01
 61e:	0e 94 08 05 	call	0xa10	; 0xa10 <timer1_init>
 622:	61 e0       	ldi	r22, 0x01	; 1
 624:	8c e1       	ldi	r24, 0x1C	; 28
 626:	0e 94 c0 01 	call	0x380	; 0x380 <DIO_SetPinDirection>
 62a:	61 e0       	ldi	r22, 0x01	; 1
 62c:	8a e1       	ldi	r24, 0x1A	; 26
 62e:	0e 94 c0 01 	call	0x380	; 0x380 <DIO_SetPinDirection>
 632:	61 e0       	ldi	r22, 0x01	; 1
 634:	8b e1       	ldi	r24, 0x1B	; 27
 636:	0e 94 c0 01 	call	0x380	; 0x380 <DIO_SetPinDirection>
 63a:	60 e0       	ldi	r22, 0x00	; 0
 63c:	8a e1       	ldi	r24, 0x1A	; 26
 63e:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
 642:	61 e0       	ldi	r22, 0x01	; 1
 644:	8b e1       	ldi	r24, 0x1B	; 27
 646:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	8c e1       	ldi	r24, 0x1C	; 28
 64e:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
 652:	00 00       	nop
 654:	0f 90       	pop	r0
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	08 95       	ret

0000065c <change_motor_1_dir>:
void change_motor_1_dir(void)
{
 65c:	cf 93       	push	r28
 65e:	df 93       	push	r29
 660:	cd b7       	in	r28, 0x3d	; 61
 662:	de b7       	in	r29, 0x3e	; 62
	DIO_TogglePin(MOTOR_1_DIR_A);
 664:	8a e1       	ldi	r24, 0x1A	; 26
 666:	0e 94 40 01 	call	0x280	; 0x280 <DIO_TogglePin>
	DIO_TogglePin(MOTOR_1_DIR_B);
 66a:	8b e1       	ldi	r24, 0x1B	; 27
 66c:	0e 94 40 01 	call	0x280	; 0x280 <DIO_TogglePin>
}
 670:	00 00       	nop
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	08 95       	ret

00000678 <stop_motor_1>:
void stop_motor_1(void)
{
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	cd b7       	in	r28, 0x3d	; 61
 67e:	de b7       	in	r29, 0x3e	; 62
	DIO_WritePin(MOTOR_1_DIR_A,ON);
 680:	61 e0       	ldi	r22, 0x01	; 1
 682:	8a e1       	ldi	r24, 0x1A	; 26
 684:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
	DIO_WritePin(MOTOR_1_DIR_B,ON);
 688:	61 e0       	ldi	r22, 0x01	; 1
 68a:	8b e1       	ldi	r24, 0x1B	; 27
 68c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_WritePin>
}
 690:	00 00       	nop
 692:	df 91       	pop	r29
 694:	cf 91       	pop	r28
 696:	08 95       	ret

00000698 <timer0_init>:
 *  Author: AVE-LAP-016
 */ 
#include "../includes/timer.h"

void timer0_init(uint8 mode,uint16 prescaler,uint8 compare_mode)
{
 698:	cf 93       	push	r28
 69a:	df 93       	push	r29
 69c:	00 d0       	rcall	.+0      	; 0x69e <timer0_init+0x6>
 69e:	00 d0       	rcall	.+0      	; 0x6a0 <timer0_init+0x8>
 6a0:	cd b7       	in	r28, 0x3d	; 61
 6a2:	de b7       	in	r29, 0x3e	; 62
 6a4:	89 83       	std	Y+1, r24	; 0x01
 6a6:	7b 83       	std	Y+3, r23	; 0x03
 6a8:	6a 83       	std	Y+2, r22	; 0x02
 6aa:	4c 83       	std	Y+4, r20	; 0x04
	switch(prescaler)
 6ac:	8a 81       	ldd	r24, Y+2	; 0x02
 6ae:	9b 81       	ldd	r25, Y+3	; 0x03
 6b0:	80 34       	cpi	r24, 0x40	; 64
 6b2:	91 05       	cpc	r25, r1
 6b4:	09 f4       	brne	.+2      	; 0x6b8 <timer0_init+0x20>
 6b6:	4a c0       	rjmp	.+148    	; 0x74c <timer0_init+0xb4>
 6b8:	81 34       	cpi	r24, 0x41	; 65
 6ba:	91 05       	cpc	r25, r1
 6bc:	28 f4       	brcc	.+10     	; 0x6c8 <timer0_init+0x30>
 6be:	00 97       	sbiw	r24, 0x00	; 0
 6c0:	69 f0       	breq	.+26     	; 0x6dc <timer0_init+0x44>
 6c2:	08 97       	sbiw	r24, 0x08	; 8
 6c4:	39 f1       	breq	.+78     	; 0x714 <timer0_init+0x7c>
 6c6:	96 c0       	rjmp	.+300    	; 0x7f4 <timer0_init+0x15c>
 6c8:	81 15       	cp	r24, r1
 6ca:	21 e0       	ldi	r18, 0x01	; 1
 6cc:	92 07       	cpc	r25, r18
 6ce:	09 f4       	brne	.+2      	; 0x6d2 <timer0_init+0x3a>
 6d0:	59 c0       	rjmp	.+178    	; 0x784 <timer0_init+0xec>
 6d2:	81 15       	cp	r24, r1
 6d4:	94 40       	sbci	r25, 0x04	; 4
 6d6:	09 f4       	brne	.+2      	; 0x6da <timer0_init+0x42>
 6d8:	71 c0       	rjmp	.+226    	; 0x7bc <timer0_init+0x124>
 6da:	8c c0       	rjmp	.+280    	; 0x7f4 <timer0_init+0x15c>
	{
	  case NO_PRESCALER :
	         Set_Bit(_TCCR0,_CS00);
 6dc:	83 e5       	ldi	r24, 0x53	; 83
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	23 e5       	ldi	r18, 0x53	; 83
 6e2:	30 e0       	ldi	r19, 0x00	; 0
 6e4:	f9 01       	movw	r30, r18
 6e6:	20 81       	ld	r18, Z
 6e8:	21 60       	ori	r18, 0x01	; 1
 6ea:	fc 01       	movw	r30, r24
 6ec:	20 83       	st	Z, r18
		     Clear_Bit(_TCCR0,_CS01);
 6ee:	83 e5       	ldi	r24, 0x53	; 83
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	23 e5       	ldi	r18, 0x53	; 83
 6f4:	30 e0       	ldi	r19, 0x00	; 0
 6f6:	f9 01       	movw	r30, r18
 6f8:	20 81       	ld	r18, Z
 6fa:	2d 7f       	andi	r18, 0xFD	; 253
 6fc:	fc 01       	movw	r30, r24
 6fe:	20 83       	st	Z, r18
			 Clear_Bit(_TCCR0,_CS02);
 700:	83 e5       	ldi	r24, 0x53	; 83
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	23 e5       	ldi	r18, 0x53	; 83
 706:	30 e0       	ldi	r19, 0x00	; 0
 708:	f9 01       	movw	r30, r18
 70a:	20 81       	ld	r18, Z
 70c:	2b 7f       	andi	r18, 0xFB	; 251
 70e:	fc 01       	movw	r30, r24
 710:	20 83       	st	Z, r18
			 break;
 712:	8c c0       	rjmp	.+280    	; 0x82c <timer0_init+0x194>
	  case 8 :
	         Clear_Bit(_TCCR0,_CS00);
 714:	83 e5       	ldi	r24, 0x53	; 83
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	23 e5       	ldi	r18, 0x53	; 83
 71a:	30 e0       	ldi	r19, 0x00	; 0
 71c:	f9 01       	movw	r30, r18
 71e:	20 81       	ld	r18, Z
 720:	2e 7f       	andi	r18, 0xFE	; 254
 722:	fc 01       	movw	r30, r24
 724:	20 83       	st	Z, r18
		     Set_Bit(_TCCR0,_CS01);
 726:	83 e5       	ldi	r24, 0x53	; 83
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	23 e5       	ldi	r18, 0x53	; 83
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	f9 01       	movw	r30, r18
 730:	20 81       	ld	r18, Z
 732:	22 60       	ori	r18, 0x02	; 2
 734:	fc 01       	movw	r30, r24
 736:	20 83       	st	Z, r18
			 Clear_Bit(_TCCR0,_CS02);
 738:	83 e5       	ldi	r24, 0x53	; 83
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	23 e5       	ldi	r18, 0x53	; 83
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	f9 01       	movw	r30, r18
 742:	20 81       	ld	r18, Z
 744:	2b 7f       	andi	r18, 0xFB	; 251
 746:	fc 01       	movw	r30, r24
 748:	20 83       	st	Z, r18
	         break;
 74a:	70 c0       	rjmp	.+224    	; 0x82c <timer0_init+0x194>
	  case 64 :
	         Set_Bit(_TCCR0,_CS00);
 74c:	83 e5       	ldi	r24, 0x53	; 83
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	23 e5       	ldi	r18, 0x53	; 83
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	f9 01       	movw	r30, r18
 756:	20 81       	ld	r18, Z
 758:	21 60       	ori	r18, 0x01	; 1
 75a:	fc 01       	movw	r30, r24
 75c:	20 83       	st	Z, r18
	         Set_Bit(_TCCR0,_CS01);
 75e:	83 e5       	ldi	r24, 0x53	; 83
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	23 e5       	ldi	r18, 0x53	; 83
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	f9 01       	movw	r30, r18
 768:	20 81       	ld	r18, Z
 76a:	22 60       	ori	r18, 0x02	; 2
 76c:	fc 01       	movw	r30, r24
 76e:	20 83       	st	Z, r18
	         Clear_Bit(_TCCR0,_CS02);
 770:	83 e5       	ldi	r24, 0x53	; 83
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	23 e5       	ldi	r18, 0x53	; 83
 776:	30 e0       	ldi	r19, 0x00	; 0
 778:	f9 01       	movw	r30, r18
 77a:	20 81       	ld	r18, Z
 77c:	2b 7f       	andi	r18, 0xFB	; 251
 77e:	fc 01       	movw	r30, r24
 780:	20 83       	st	Z, r18
	         break;
 782:	54 c0       	rjmp	.+168    	; 0x82c <timer0_init+0x194>
	  case 256 :
	         Clear_Bit(_TCCR0,_CS00);
 784:	83 e5       	ldi	r24, 0x53	; 83
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	23 e5       	ldi	r18, 0x53	; 83
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	f9 01       	movw	r30, r18
 78e:	20 81       	ld	r18, Z
 790:	2e 7f       	andi	r18, 0xFE	; 254
 792:	fc 01       	movw	r30, r24
 794:	20 83       	st	Z, r18
	         Clear_Bit(_TCCR0,_CS01);
 796:	83 e5       	ldi	r24, 0x53	; 83
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	23 e5       	ldi	r18, 0x53	; 83
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	f9 01       	movw	r30, r18
 7a0:	20 81       	ld	r18, Z
 7a2:	2d 7f       	andi	r18, 0xFD	; 253
 7a4:	fc 01       	movw	r30, r24
 7a6:	20 83       	st	Z, r18
	         Set_Bit(_TCCR0,_CS02);
 7a8:	83 e5       	ldi	r24, 0x53	; 83
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	23 e5       	ldi	r18, 0x53	; 83
 7ae:	30 e0       	ldi	r19, 0x00	; 0
 7b0:	f9 01       	movw	r30, r18
 7b2:	20 81       	ld	r18, Z
 7b4:	24 60       	ori	r18, 0x04	; 4
 7b6:	fc 01       	movw	r30, r24
 7b8:	20 83       	st	Z, r18
	         break;
 7ba:	38 c0       	rjmp	.+112    	; 0x82c <timer0_init+0x194>
	  case 1024 :
	         Set_Bit(_TCCR0,_CS00);
 7bc:	83 e5       	ldi	r24, 0x53	; 83
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	23 e5       	ldi	r18, 0x53	; 83
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	f9 01       	movw	r30, r18
 7c6:	20 81       	ld	r18, Z
 7c8:	21 60       	ori	r18, 0x01	; 1
 7ca:	fc 01       	movw	r30, r24
 7cc:	20 83       	st	Z, r18
	         Clear_Bit(_TCCR0,_CS01);
 7ce:	83 e5       	ldi	r24, 0x53	; 83
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	23 e5       	ldi	r18, 0x53	; 83
 7d4:	30 e0       	ldi	r19, 0x00	; 0
 7d6:	f9 01       	movw	r30, r18
 7d8:	20 81       	ld	r18, Z
 7da:	2d 7f       	andi	r18, 0xFD	; 253
 7dc:	fc 01       	movw	r30, r24
 7de:	20 83       	st	Z, r18
	         Set_Bit(_TCCR0,_CS02);
 7e0:	83 e5       	ldi	r24, 0x53	; 83
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	23 e5       	ldi	r18, 0x53	; 83
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	f9 01       	movw	r30, r18
 7ea:	20 81       	ld	r18, Z
 7ec:	24 60       	ori	r18, 0x04	; 4
 7ee:	fc 01       	movw	r30, r24
 7f0:	20 83       	st	Z, r18
	         break;
 7f2:	1c c0       	rjmp	.+56     	; 0x82c <timer0_init+0x194>
	  default:
	         Set_Bit(_TCCR0,_CS00);
 7f4:	83 e5       	ldi	r24, 0x53	; 83
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	23 e5       	ldi	r18, 0x53	; 83
 7fa:	30 e0       	ldi	r19, 0x00	; 0
 7fc:	f9 01       	movw	r30, r18
 7fe:	20 81       	ld	r18, Z
 800:	21 60       	ori	r18, 0x01	; 1
 802:	fc 01       	movw	r30, r24
 804:	20 83       	st	Z, r18
	         Clear_Bit(_TCCR0,_CS01);
 806:	83 e5       	ldi	r24, 0x53	; 83
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	23 e5       	ldi	r18, 0x53	; 83
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	f9 01       	movw	r30, r18
 810:	20 81       	ld	r18, Z
 812:	2d 7f       	andi	r18, 0xFD	; 253
 814:	fc 01       	movw	r30, r24
 816:	20 83       	st	Z, r18
	         Clear_Bit(_TCCR0,_CS02);
 818:	83 e5       	ldi	r24, 0x53	; 83
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	23 e5       	ldi	r18, 0x53	; 83
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	f9 01       	movw	r30, r18
 822:	20 81       	ld	r18, Z
 824:	2b 7f       	andi	r18, 0xFB	; 251
 826:	fc 01       	movw	r30, r24
 828:	20 83       	st	Z, r18
	         break;     
 82a:	00 00       	nop
    }
	switch(mode)
 82c:	89 81       	ldd	r24, Y+1	; 0x01
 82e:	88 2f       	mov	r24, r24
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	81 30       	cpi	r24, 0x01	; 1
 834:	91 05       	cpc	r25, r1
 836:	09 f4       	brne	.+2      	; 0x83a <timer0_init+0x1a2>
 838:	49 c0       	rjmp	.+146    	; 0x8cc <__stack+0x6d>
 83a:	82 30       	cpi	r24, 0x02	; 2
 83c:	91 05       	cpc	r25, r1
 83e:	1c f4       	brge	.+6      	; 0x846 <timer0_init+0x1ae>
 840:	89 2b       	or	r24, r25
 842:	41 f0       	breq	.+16     	; 0x854 <timer0_init+0x1bc>
 844:	88 c0       	rjmp	.+272    	; 0x956 <__stack+0xf7>
 846:	82 30       	cpi	r24, 0x02	; 2
 848:	91 05       	cpc	r25, r1
 84a:	09 f4       	brne	.+2      	; 0x84e <timer0_init+0x1b6>
 84c:	5f c0       	rjmp	.+190    	; 0x90c <__stack+0xad>
 84e:	03 97       	sbiw	r24, 0x03	; 3
 850:	c1 f0       	breq	.+48     	; 0x882 <__stack+0x23>
 852:	81 c0       	rjmp	.+258    	; 0x956 <__stack+0xf7>
	{
	  case NORMAL_MODE :
	              _TCNT0 = 0 ;
 854:	82 e5       	ldi	r24, 0x52	; 82
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	fc 01       	movw	r30, r24
 85a:	10 82       	st	Z, r1
				  Clear_Bit(_TCCR0,_WGM01);
 85c:	83 e5       	ldi	r24, 0x53	; 83
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	23 e5       	ldi	r18, 0x53	; 83
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	f9 01       	movw	r30, r18
 866:	20 81       	ld	r18, Z
 868:	27 7f       	andi	r18, 0xF7	; 247
 86a:	fc 01       	movw	r30, r24
 86c:	20 83       	st	Z, r18
				  Clear_Bit(_TCCR0,_WGM00);
 86e:	83 e5       	ldi	r24, 0x53	; 83
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	23 e5       	ldi	r18, 0x53	; 83
 874:	30 e0       	ldi	r19, 0x00	; 0
 876:	f9 01       	movw	r30, r18
 878:	20 81       	ld	r18, Z
 87a:	2e 7f       	andi	r18, 0xFE	; 254
 87c:	fc 01       	movw	r30, r24
 87e:	20 83       	st	Z, r18
	              break;
 880:	6a c0       	rjmp	.+212    	; 0x956 <__stack+0xf7>
				  
      case PHASE_PWM_MODE :
				  _TCNT0 = 0 ;
 882:	82 e5       	ldi	r24, 0x52	; 82
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	fc 01       	movw	r30, r24
 888:	10 82       	st	Z, r1
				  _OCR0 = 0xFF ;
 88a:	8c e5       	ldi	r24, 0x5C	; 92
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	2f ef       	ldi	r18, 0xFF	; 255
 890:	fc 01       	movw	r30, r24
 892:	20 83       	st	Z, r18
				  Set_Bit(_TCCR0,_WGM00);
 894:	83 e5       	ldi	r24, 0x53	; 83
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	23 e5       	ldi	r18, 0x53	; 83
 89a:	30 e0       	ldi	r19, 0x00	; 0
 89c:	f9 01       	movw	r30, r18
 89e:	20 81       	ld	r18, Z
 8a0:	21 60       	ori	r18, 0x01	; 1
 8a2:	fc 01       	movw	r30, r24
 8a4:	20 83       	st	Z, r18
				  Clear_Bit(_TCCR0,_WGM01);
 8a6:	83 e5       	ldi	r24, 0x53	; 83
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	23 e5       	ldi	r18, 0x53	; 83
 8ac:	30 e0       	ldi	r19, 0x00	; 0
 8ae:	f9 01       	movw	r30, r18
 8b0:	20 81       	ld	r18, Z
 8b2:	27 7f       	andi	r18, 0xF7	; 247
 8b4:	fc 01       	movw	r30, r24
 8b6:	20 83       	st	Z, r18
				  Set_Bit(_TIFR,_OCF0);
 8b8:	88 e5       	ldi	r24, 0x58	; 88
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	28 e5       	ldi	r18, 0x58	; 88
 8be:	30 e0       	ldi	r19, 0x00	; 0
 8c0:	f9 01       	movw	r30, r18
 8c2:	20 81       	ld	r18, Z
 8c4:	22 60       	ori	r18, 0x02	; 2
 8c6:	fc 01       	movw	r30, r24
 8c8:	20 83       	st	Z, r18
				  break;
 8ca:	45 c0       	rjmp	.+138    	; 0x956 <__stack+0xf7>
				  
      case CTC_MODE :
	              _TCNT0 = 0 ;
 8cc:	82 e5       	ldi	r24, 0x52	; 82
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	fc 01       	movw	r30, r24
 8d2:	10 82       	st	Z, r1
				 // _OCR0 = 0xFF ;
				  Clear_Bit(_TCCR0,_WGM00);
 8d4:	83 e5       	ldi	r24, 0x53	; 83
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	23 e5       	ldi	r18, 0x53	; 83
 8da:	30 e0       	ldi	r19, 0x00	; 0
 8dc:	f9 01       	movw	r30, r18
 8de:	20 81       	ld	r18, Z
 8e0:	2e 7f       	andi	r18, 0xFE	; 254
 8e2:	fc 01       	movw	r30, r24
 8e4:	20 83       	st	Z, r18
				  Set_Bit(_TCCR0,_WGM01);
 8e6:	83 e5       	ldi	r24, 0x53	; 83
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	23 e5       	ldi	r18, 0x53	; 83
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	f9 01       	movw	r30, r18
 8f0:	20 81       	ld	r18, Z
 8f2:	28 60       	ori	r18, 0x08	; 8
 8f4:	fc 01       	movw	r30, r24
 8f6:	20 83       	st	Z, r18
				  Set_Bit(_TIFR,_OCF0);
 8f8:	88 e5       	ldi	r24, 0x58	; 88
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	28 e5       	ldi	r18, 0x58	; 88
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	f9 01       	movw	r30, r18
 902:	20 81       	ld	r18, Z
 904:	22 60       	ori	r18, 0x02	; 2
 906:	fc 01       	movw	r30, r24
 908:	20 83       	st	Z, r18
                  break;
 90a:	25 c0       	rjmp	.+74     	; 0x956 <__stack+0xf7>
	  
	  case FAST_PWM_MODE :
	              _TCNT0 = 0 ;
 90c:	82 e5       	ldi	r24, 0x52	; 82
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	fc 01       	movw	r30, r24
 912:	10 82       	st	Z, r1
				  _OCR0 = 0xFF ;
 914:	8c e5       	ldi	r24, 0x5C	; 92
 916:	90 e0       	ldi	r25, 0x00	; 0
 918:	2f ef       	ldi	r18, 0xFF	; 255
 91a:	fc 01       	movw	r30, r24
 91c:	20 83       	st	Z, r18
				  Set_Bit(_TCCR0,_WGM00);
 91e:	83 e5       	ldi	r24, 0x53	; 83
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	23 e5       	ldi	r18, 0x53	; 83
 924:	30 e0       	ldi	r19, 0x00	; 0
 926:	f9 01       	movw	r30, r18
 928:	20 81       	ld	r18, Z
 92a:	21 60       	ori	r18, 0x01	; 1
 92c:	fc 01       	movw	r30, r24
 92e:	20 83       	st	Z, r18
				  Set_Bit(_TCCR0,_WGM01);
 930:	83 e5       	ldi	r24, 0x53	; 83
 932:	90 e0       	ldi	r25, 0x00	; 0
 934:	23 e5       	ldi	r18, 0x53	; 83
 936:	30 e0       	ldi	r19, 0x00	; 0
 938:	f9 01       	movw	r30, r18
 93a:	20 81       	ld	r18, Z
 93c:	28 60       	ori	r18, 0x08	; 8
 93e:	fc 01       	movw	r30, r24
 940:	20 83       	st	Z, r18
				  Set_Bit(_TIFR,_OCF0);
 942:	88 e5       	ldi	r24, 0x58	; 88
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	28 e5       	ldi	r18, 0x58	; 88
 948:	30 e0       	ldi	r19, 0x00	; 0
 94a:	f9 01       	movw	r30, r18
 94c:	20 81       	ld	r18, Z
 94e:	22 60       	ori	r18, 0x02	; 2
 950:	fc 01       	movw	r30, r24
 952:	20 83       	st	Z, r18
	              break;
 954:	00 00       	nop
	}
	
	switch(compare_mode)
 956:	8c 81       	ldd	r24, Y+4	; 0x04
 958:	88 2f       	mov	r24, r24
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	81 30       	cpi	r24, 0x01	; 1
 95e:	91 05       	cpc	r25, r1
 960:	b1 f0       	breq	.+44     	; 0x98e <__stack+0x12f>
 962:	82 30       	cpi	r24, 0x02	; 2
 964:	91 05       	cpc	r25, r1
 966:	1c f4       	brge	.+6      	; 0x96e <__stack+0x10f>
 968:	89 2b       	or	r24, r25
 96a:	39 f0       	breq	.+14     	; 0x97a <__stack+0x11b>
 96c:	40 c0       	rjmp	.+128    	; 0x9ee <__stack+0x18f>
 96e:	82 30       	cpi	r24, 0x02	; 2
 970:	91 05       	cpc	r25, r1
 972:	99 f1       	breq	.+102    	; 0x9da <__stack+0x17b>
 974:	03 97       	sbiw	r24, 0x03	; 3
 976:	f1 f0       	breq	.+60     	; 0x9b4 <__stack+0x155>
 978:	3a c0       	rjmp	.+116    	; 0x9ee <__stack+0x18f>
	{
		case NORMAL_MODE :
		        _TCCR0 &= ~((1<<_COM00)|(1<<_COM01));
 97a:	83 e5       	ldi	r24, 0x53	; 83
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	23 e5       	ldi	r18, 0x53	; 83
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	f9 01       	movw	r30, r18
 984:	20 81       	ld	r18, Z
 986:	2f 7c       	andi	r18, 0xCF	; 207
 988:	fc 01       	movw	r30, r24
 98a:	20 83       	st	Z, r18
				break;
 98c:	30 c0       	rjmp	.+96     	; 0x9ee <__stack+0x18f>
	    case TOGGLE_MODE :
	            _TCCR0 |=  (1<<_COM00);
 98e:	83 e5       	ldi	r24, 0x53	; 83
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	23 e5       	ldi	r18, 0x53	; 83
 994:	30 e0       	ldi	r19, 0x00	; 0
 996:	f9 01       	movw	r30, r18
 998:	20 81       	ld	r18, Z
 99a:	20 61       	ori	r18, 0x10	; 16
 99c:	fc 01       	movw	r30, r24
 99e:	20 83       	st	Z, r18
				_TCCR0 &= ~(1<<_COM01);
 9a0:	83 e5       	ldi	r24, 0x53	; 83
 9a2:	90 e0       	ldi	r25, 0x00	; 0
 9a4:	23 e5       	ldi	r18, 0x53	; 83
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	f9 01       	movw	r30, r18
 9aa:	20 81       	ld	r18, Z
 9ac:	2f 7d       	andi	r18, 0xDF	; 223
 9ae:	fc 01       	movw	r30, r24
 9b0:	20 83       	st	Z, r18
	            break;
 9b2:	1d c0       	rjmp	.+58     	; 0x9ee <__stack+0x18f>
	    case CLEAR_MODE :
                _TCCR0 &= ~(1<<_COM00);
 9b4:	83 e5       	ldi	r24, 0x53	; 83
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	23 e5       	ldi	r18, 0x53	; 83
 9ba:	30 e0       	ldi	r19, 0x00	; 0
 9bc:	f9 01       	movw	r30, r18
 9be:	20 81       	ld	r18, Z
 9c0:	2f 7e       	andi	r18, 0xEF	; 239
 9c2:	fc 01       	movw	r30, r24
 9c4:	20 83       	st	Z, r18
                _TCCR0 |=  (1<<_COM01);
 9c6:	83 e5       	ldi	r24, 0x53	; 83
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	23 e5       	ldi	r18, 0x53	; 83
 9cc:	30 e0       	ldi	r19, 0x00	; 0
 9ce:	f9 01       	movw	r30, r18
 9d0:	20 81       	ld	r18, Z
 9d2:	20 62       	ori	r18, 0x20	; 32
 9d4:	fc 01       	movw	r30, r24
 9d6:	20 83       	st	Z, r18
	            break;
 9d8:	0a c0       	rjmp	.+20     	; 0x9ee <__stack+0x18f>
		case SET_MODE :
	            _TCCR0 |= ((1<<_COM00)|(1<<_COM01));
 9da:	83 e5       	ldi	r24, 0x53	; 83
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	23 e5       	ldi	r18, 0x53	; 83
 9e0:	30 e0       	ldi	r19, 0x00	; 0
 9e2:	f9 01       	movw	r30, r18
 9e4:	20 81       	ld	r18, Z
 9e6:	20 63       	ori	r18, 0x30	; 48
 9e8:	fc 01       	movw	r30, r24
 9ea:	20 83       	st	Z, r18
	            break;
 9ec:	00 00       	nop
	}
	Set_Bit(_TIMSK,_OCIE0);
 9ee:	89 e5       	ldi	r24, 0x59	; 89
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	29 e5       	ldi	r18, 0x59	; 89
 9f4:	30 e0       	ldi	r19, 0x00	; 0
 9f6:	f9 01       	movw	r30, r18
 9f8:	20 81       	ld	r18, Z
 9fa:	22 60       	ori	r18, 0x02	; 2
 9fc:	fc 01       	movw	r30, r24
 9fe:	20 83       	st	Z, r18
}
 a00:	00 00       	nop
 a02:	0f 90       	pop	r0
 a04:	0f 90       	pop	r0
 a06:	0f 90       	pop	r0
 a08:	0f 90       	pop	r0
 a0a:	df 91       	pop	r29
 a0c:	cf 91       	pop	r28
 a0e:	08 95       	ret

00000a10 <timer1_init>:
void timer1_init(uint8 mode,uint16 prescaler,uint8 compare_mode,uint8 compare_pin)
{
 a10:	cf 93       	push	r28
 a12:	df 93       	push	r29
 a14:	00 d0       	rcall	.+0      	; 0xa16 <timer1_init+0x6>
 a16:	00 d0       	rcall	.+0      	; 0xa18 <timer1_init+0x8>
 a18:	1f 92       	push	r1
 a1a:	cd b7       	in	r28, 0x3d	; 61
 a1c:	de b7       	in	r29, 0x3e	; 62
 a1e:	89 83       	std	Y+1, r24	; 0x01
 a20:	7b 83       	std	Y+3, r23	; 0x03
 a22:	6a 83       	std	Y+2, r22	; 0x02
 a24:	4c 83       	std	Y+4, r20	; 0x04
 a26:	2d 83       	std	Y+5, r18	; 0x05
	if ( compare_pin == COMPARE_A)
 a28:	8d 81       	ldd	r24, Y+5	; 0x05
 a2a:	88 23       	and	r24, r24
 a2c:	09 f0       	breq	.+2      	; 0xa30 <timer1_init+0x20>
 a2e:	5f c0       	rjmp	.+190    	; 0xaee <timer1_init+0xde>
	{
		switch(compare_mode)
 a30:	8c 81       	ldd	r24, Y+4	; 0x04
 a32:	88 2f       	mov	r24, r24
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	81 30       	cpi	r24, 0x01	; 1
 a38:	91 05       	cpc	r25, r1
 a3a:	f9 f0       	breq	.+62     	; 0xa7a <timer1_init+0x6a>
 a3c:	82 30       	cpi	r24, 0x02	; 2
 a3e:	91 05       	cpc	r25, r1
 a40:	1c f4       	brge	.+6      	; 0xa48 <timer1_init+0x38>
 a42:	89 2b       	or	r24, r25
 a44:	39 f0       	breq	.+14     	; 0xa54 <timer1_init+0x44>
 a46:	b5 c0       	rjmp	.+362    	; 0xbb2 <timer1_init+0x1a2>
 a48:	82 30       	cpi	r24, 0x02	; 2
 a4a:	91 05       	cpc	r25, r1
 a4c:	e1 f1       	breq	.+120    	; 0xac6 <timer1_init+0xb6>
 a4e:	03 97       	sbiw	r24, 0x03	; 3
 a50:	39 f1       	breq	.+78     	; 0xaa0 <timer1_init+0x90>
 a52:	af c0       	rjmp	.+350    	; 0xbb2 <timer1_init+0x1a2>
		{
			case NORMAL_MODE :
			Set_Bit(_TCCR1A,_COM1A0);
 a54:	8f e4       	ldi	r24, 0x4F	; 79
 a56:	90 e0       	ldi	r25, 0x00	; 0
 a58:	2f e4       	ldi	r18, 0x4F	; 79
 a5a:	30 e0       	ldi	r19, 0x00	; 0
 a5c:	f9 01       	movw	r30, r18
 a5e:	20 81       	ld	r18, Z
 a60:	20 64       	ori	r18, 0x40	; 64
 a62:	fc 01       	movw	r30, r24
 a64:	20 83       	st	Z, r18
			Set_Bit(_TCCR1A,_COM1A1);
 a66:	8f e4       	ldi	r24, 0x4F	; 79
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	2f e4       	ldi	r18, 0x4F	; 79
 a6c:	30 e0       	ldi	r19, 0x00	; 0
 a6e:	f9 01       	movw	r30, r18
 a70:	20 81       	ld	r18, Z
 a72:	20 68       	ori	r18, 0x80	; 128
 a74:	fc 01       	movw	r30, r24
 a76:	20 83       	st	Z, r18
			break;
 a78:	9c c0       	rjmp	.+312    	; 0xbb2 <timer1_init+0x1a2>
			case TOGGLE_MODE :
			Set_Bit(_TCCR1A,_COM1A0);
 a7a:	8f e4       	ldi	r24, 0x4F	; 79
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	2f e4       	ldi	r18, 0x4F	; 79
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	f9 01       	movw	r30, r18
 a84:	20 81       	ld	r18, Z
 a86:	20 64       	ori	r18, 0x40	; 64
 a88:	fc 01       	movw	r30, r24
 a8a:	20 83       	st	Z, r18
			Clear_Bit(_TCCR1A,_COM1A1);
 a8c:	8f e4       	ldi	r24, 0x4F	; 79
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	2f e4       	ldi	r18, 0x4F	; 79
 a92:	30 e0       	ldi	r19, 0x00	; 0
 a94:	f9 01       	movw	r30, r18
 a96:	20 81       	ld	r18, Z
 a98:	2f 77       	andi	r18, 0x7F	; 127
 a9a:	fc 01       	movw	r30, r24
 a9c:	20 83       	st	Z, r18
			break;
 a9e:	89 c0       	rjmp	.+274    	; 0xbb2 <timer1_init+0x1a2>
			case CLEAR_MODE :
			Clear_Bit(_TCCR1A,_COM1A0);
 aa0:	8f e4       	ldi	r24, 0x4F	; 79
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	2f e4       	ldi	r18, 0x4F	; 79
 aa6:	30 e0       	ldi	r19, 0x00	; 0
 aa8:	f9 01       	movw	r30, r18
 aaa:	20 81       	ld	r18, Z
 aac:	2f 7b       	andi	r18, 0xBF	; 191
 aae:	fc 01       	movw	r30, r24
 ab0:	20 83       	st	Z, r18
			Set_Bit(_TCCR1A,_COM1A1);
 ab2:	8f e4       	ldi	r24, 0x4F	; 79
 ab4:	90 e0       	ldi	r25, 0x00	; 0
 ab6:	2f e4       	ldi	r18, 0x4F	; 79
 ab8:	30 e0       	ldi	r19, 0x00	; 0
 aba:	f9 01       	movw	r30, r18
 abc:	20 81       	ld	r18, Z
 abe:	20 68       	ori	r18, 0x80	; 128
 ac0:	fc 01       	movw	r30, r24
 ac2:	20 83       	st	Z, r18
			break;
 ac4:	76 c0       	rjmp	.+236    	; 0xbb2 <timer1_init+0x1a2>
			case SET_MODE :
			Set_Bit(_TCCR1A,_COM1A0);
 ac6:	8f e4       	ldi	r24, 0x4F	; 79
 ac8:	90 e0       	ldi	r25, 0x00	; 0
 aca:	2f e4       	ldi	r18, 0x4F	; 79
 acc:	30 e0       	ldi	r19, 0x00	; 0
 ace:	f9 01       	movw	r30, r18
 ad0:	20 81       	ld	r18, Z
 ad2:	20 64       	ori	r18, 0x40	; 64
 ad4:	fc 01       	movw	r30, r24
 ad6:	20 83       	st	Z, r18
			Set_Bit(_TCCR1A,_COM1A1);
 ad8:	8f e4       	ldi	r24, 0x4F	; 79
 ada:	90 e0       	ldi	r25, 0x00	; 0
 adc:	2f e4       	ldi	r18, 0x4F	; 79
 ade:	30 e0       	ldi	r19, 0x00	; 0
 ae0:	f9 01       	movw	r30, r18
 ae2:	20 81       	ld	r18, Z
 ae4:	20 68       	ori	r18, 0x80	; 128
 ae6:	fc 01       	movw	r30, r24
 ae8:	20 83       	st	Z, r18
			break;
 aea:	00 00       	nop
 aec:	62 c0       	rjmp	.+196    	; 0xbb2 <timer1_init+0x1a2>
		}
	}
	else if (compare_pin == COMPARE_B)
 aee:	8d 81       	ldd	r24, Y+5	; 0x05
 af0:	81 30       	cpi	r24, 0x01	; 1
 af2:	09 f0       	breq	.+2      	; 0xaf6 <timer1_init+0xe6>
 af4:	5e c0       	rjmp	.+188    	; 0xbb2 <timer1_init+0x1a2>
	{
		switch(compare_mode)
 af6:	8c 81       	ldd	r24, Y+4	; 0x04
 af8:	88 2f       	mov	r24, r24
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	81 30       	cpi	r24, 0x01	; 1
 afe:	91 05       	cpc	r25, r1
 b00:	f9 f0       	breq	.+62     	; 0xb40 <timer1_init+0x130>
 b02:	82 30       	cpi	r24, 0x02	; 2
 b04:	91 05       	cpc	r25, r1
 b06:	1c f4       	brge	.+6      	; 0xb0e <timer1_init+0xfe>
 b08:	89 2b       	or	r24, r25
 b0a:	39 f0       	breq	.+14     	; 0xb1a <timer1_init+0x10a>
 b0c:	52 c0       	rjmp	.+164    	; 0xbb2 <timer1_init+0x1a2>
 b0e:	82 30       	cpi	r24, 0x02	; 2
 b10:	91 05       	cpc	r25, r1
 b12:	e1 f1       	breq	.+120    	; 0xb8c <timer1_init+0x17c>
 b14:	03 97       	sbiw	r24, 0x03	; 3
 b16:	39 f1       	breq	.+78     	; 0xb66 <timer1_init+0x156>
 b18:	4c c0       	rjmp	.+152    	; 0xbb2 <timer1_init+0x1a2>
		{
		 case NORMAL_MODE :
			Set_Bit(_TCCR1A,_COM1B0);
 b1a:	8f e4       	ldi	r24, 0x4F	; 79
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	2f e4       	ldi	r18, 0x4F	; 79
 b20:	30 e0       	ldi	r19, 0x00	; 0
 b22:	f9 01       	movw	r30, r18
 b24:	20 81       	ld	r18, Z
 b26:	20 61       	ori	r18, 0x10	; 16
 b28:	fc 01       	movw	r30, r24
 b2a:	20 83       	st	Z, r18
			Set_Bit(_TCCR1A,_COM1B1);
 b2c:	8f e4       	ldi	r24, 0x4F	; 79
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	2f e4       	ldi	r18, 0x4F	; 79
 b32:	30 e0       	ldi	r19, 0x00	; 0
 b34:	f9 01       	movw	r30, r18
 b36:	20 81       	ld	r18, Z
 b38:	20 62       	ori	r18, 0x20	; 32
 b3a:	fc 01       	movw	r30, r24
 b3c:	20 83       	st	Z, r18
			break;
 b3e:	39 c0       	rjmp	.+114    	; 0xbb2 <timer1_init+0x1a2>
		 case TOGGLE_MODE :
			Set_Bit(_TCCR1A,_COM1B0);
 b40:	8f e4       	ldi	r24, 0x4F	; 79
 b42:	90 e0       	ldi	r25, 0x00	; 0
 b44:	2f e4       	ldi	r18, 0x4F	; 79
 b46:	30 e0       	ldi	r19, 0x00	; 0
 b48:	f9 01       	movw	r30, r18
 b4a:	20 81       	ld	r18, Z
 b4c:	20 61       	ori	r18, 0x10	; 16
 b4e:	fc 01       	movw	r30, r24
 b50:	20 83       	st	Z, r18
			Clear_Bit(_TCCR1A,_COM1B1);
 b52:	8f e4       	ldi	r24, 0x4F	; 79
 b54:	90 e0       	ldi	r25, 0x00	; 0
 b56:	2f e4       	ldi	r18, 0x4F	; 79
 b58:	30 e0       	ldi	r19, 0x00	; 0
 b5a:	f9 01       	movw	r30, r18
 b5c:	20 81       	ld	r18, Z
 b5e:	2f 7d       	andi	r18, 0xDF	; 223
 b60:	fc 01       	movw	r30, r24
 b62:	20 83       	st	Z, r18
			break;
 b64:	26 c0       	rjmp	.+76     	; 0xbb2 <timer1_init+0x1a2>
		 case CLEAR_MODE :
			Clear_Bit(_TCCR1A,_COM1B0);
 b66:	8f e4       	ldi	r24, 0x4F	; 79
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	2f e4       	ldi	r18, 0x4F	; 79
 b6c:	30 e0       	ldi	r19, 0x00	; 0
 b6e:	f9 01       	movw	r30, r18
 b70:	20 81       	ld	r18, Z
 b72:	2f 7e       	andi	r18, 0xEF	; 239
 b74:	fc 01       	movw	r30, r24
 b76:	20 83       	st	Z, r18
			Set_Bit(_TCCR1A,_COM1B1);
 b78:	8f e4       	ldi	r24, 0x4F	; 79
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	2f e4       	ldi	r18, 0x4F	; 79
 b7e:	30 e0       	ldi	r19, 0x00	; 0
 b80:	f9 01       	movw	r30, r18
 b82:	20 81       	ld	r18, Z
 b84:	20 62       	ori	r18, 0x20	; 32
 b86:	fc 01       	movw	r30, r24
 b88:	20 83       	st	Z, r18
			break;
 b8a:	13 c0       	rjmp	.+38     	; 0xbb2 <timer1_init+0x1a2>
		 case SET_MODE :
			Set_Bit(_TCCR1A,_COM1B0);
 b8c:	8f e4       	ldi	r24, 0x4F	; 79
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	2f e4       	ldi	r18, 0x4F	; 79
 b92:	30 e0       	ldi	r19, 0x00	; 0
 b94:	f9 01       	movw	r30, r18
 b96:	20 81       	ld	r18, Z
 b98:	20 61       	ori	r18, 0x10	; 16
 b9a:	fc 01       	movw	r30, r24
 b9c:	20 83       	st	Z, r18
			Set_Bit(_TCCR1A,_COM1B1);
 b9e:	8f e4       	ldi	r24, 0x4F	; 79
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	2f e4       	ldi	r18, 0x4F	; 79
 ba4:	30 e0       	ldi	r19, 0x00	; 0
 ba6:	f9 01       	movw	r30, r18
 ba8:	20 81       	ld	r18, Z
 baa:	20 62       	ori	r18, 0x20	; 32
 bac:	fc 01       	movw	r30, r24
 bae:	20 83       	st	Z, r18
			break;
 bb0:	00 00       	nop
		}
	}
	
	switch(prescaler)
 bb2:	8a 81       	ldd	r24, Y+2	; 0x02
 bb4:	9b 81       	ldd	r25, Y+3	; 0x03
 bb6:	80 34       	cpi	r24, 0x40	; 64
 bb8:	91 05       	cpc	r25, r1
 bba:	09 f4       	brne	.+2      	; 0xbbe <timer1_init+0x1ae>
 bbc:	4a c0       	rjmp	.+148    	; 0xc52 <timer1_init+0x242>
 bbe:	81 34       	cpi	r24, 0x41	; 65
 bc0:	91 05       	cpc	r25, r1
 bc2:	28 f4       	brcc	.+10     	; 0xbce <timer1_init+0x1be>
 bc4:	00 97       	sbiw	r24, 0x00	; 0
 bc6:	69 f0       	breq	.+26     	; 0xbe2 <timer1_init+0x1d2>
 bc8:	08 97       	sbiw	r24, 0x08	; 8
 bca:	39 f1       	breq	.+78     	; 0xc1a <timer1_init+0x20a>
 bcc:	96 c0       	rjmp	.+300    	; 0xcfa <timer1_init+0x2ea>
 bce:	81 15       	cp	r24, r1
 bd0:	f1 e0       	ldi	r31, 0x01	; 1
 bd2:	9f 07       	cpc	r25, r31
 bd4:	09 f4       	brne	.+2      	; 0xbd8 <timer1_init+0x1c8>
 bd6:	59 c0       	rjmp	.+178    	; 0xc8a <timer1_init+0x27a>
 bd8:	81 15       	cp	r24, r1
 bda:	94 40       	sbci	r25, 0x04	; 4
 bdc:	09 f4       	brne	.+2      	; 0xbe0 <timer1_init+0x1d0>
 bde:	71 c0       	rjmp	.+226    	; 0xcc2 <timer1_init+0x2b2>
 be0:	8c c0       	rjmp	.+280    	; 0xcfa <timer1_init+0x2ea>
	{
	 case NO_PRESCALER :
		Set_Bit(_TCCR1B,_CS10);
 be2:	8e e4       	ldi	r24, 0x4E	; 78
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	2e e4       	ldi	r18, 0x4E	; 78
 be8:	30 e0       	ldi	r19, 0x00	; 0
 bea:	f9 01       	movw	r30, r18
 bec:	20 81       	ld	r18, Z
 bee:	21 60       	ori	r18, 0x01	; 1
 bf0:	fc 01       	movw	r30, r24
 bf2:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS11);
 bf4:	8e e4       	ldi	r24, 0x4E	; 78
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	2e e4       	ldi	r18, 0x4E	; 78
 bfa:	30 e0       	ldi	r19, 0x00	; 0
 bfc:	f9 01       	movw	r30, r18
 bfe:	20 81       	ld	r18, Z
 c00:	2d 7f       	andi	r18, 0xFD	; 253
 c02:	fc 01       	movw	r30, r24
 c04:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS12);
 c06:	8e e4       	ldi	r24, 0x4E	; 78
 c08:	90 e0       	ldi	r25, 0x00	; 0
 c0a:	2e e4       	ldi	r18, 0x4E	; 78
 c0c:	30 e0       	ldi	r19, 0x00	; 0
 c0e:	f9 01       	movw	r30, r18
 c10:	20 81       	ld	r18, Z
 c12:	2b 7f       	andi	r18, 0xFB	; 251
 c14:	fc 01       	movw	r30, r24
 c16:	20 83       	st	Z, r18
		break;
 c18:	8c c0       	rjmp	.+280    	; 0xd32 <timer1_init+0x322>
	 case 8 :
		Clear_Bit(_TCCR1B,_CS10);
 c1a:	8e e4       	ldi	r24, 0x4E	; 78
 c1c:	90 e0       	ldi	r25, 0x00	; 0
 c1e:	2e e4       	ldi	r18, 0x4E	; 78
 c20:	30 e0       	ldi	r19, 0x00	; 0
 c22:	f9 01       	movw	r30, r18
 c24:	20 81       	ld	r18, Z
 c26:	2e 7f       	andi	r18, 0xFE	; 254
 c28:	fc 01       	movw	r30, r24
 c2a:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_CS11);
 c2c:	8e e4       	ldi	r24, 0x4E	; 78
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	2e e4       	ldi	r18, 0x4E	; 78
 c32:	30 e0       	ldi	r19, 0x00	; 0
 c34:	f9 01       	movw	r30, r18
 c36:	20 81       	ld	r18, Z
 c38:	22 60       	ori	r18, 0x02	; 2
 c3a:	fc 01       	movw	r30, r24
 c3c:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS12);
 c3e:	8e e4       	ldi	r24, 0x4E	; 78
 c40:	90 e0       	ldi	r25, 0x00	; 0
 c42:	2e e4       	ldi	r18, 0x4E	; 78
 c44:	30 e0       	ldi	r19, 0x00	; 0
 c46:	f9 01       	movw	r30, r18
 c48:	20 81       	ld	r18, Z
 c4a:	2b 7f       	andi	r18, 0xFB	; 251
 c4c:	fc 01       	movw	r30, r24
 c4e:	20 83       	st	Z, r18
		break;
 c50:	70 c0       	rjmp	.+224    	; 0xd32 <timer1_init+0x322>
	 case 64 :
		Set_Bit(_TCCR1B,_CS10);
 c52:	8e e4       	ldi	r24, 0x4E	; 78
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	2e e4       	ldi	r18, 0x4E	; 78
 c58:	30 e0       	ldi	r19, 0x00	; 0
 c5a:	f9 01       	movw	r30, r18
 c5c:	20 81       	ld	r18, Z
 c5e:	21 60       	ori	r18, 0x01	; 1
 c60:	fc 01       	movw	r30, r24
 c62:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_CS11);
 c64:	8e e4       	ldi	r24, 0x4E	; 78
 c66:	90 e0       	ldi	r25, 0x00	; 0
 c68:	2e e4       	ldi	r18, 0x4E	; 78
 c6a:	30 e0       	ldi	r19, 0x00	; 0
 c6c:	f9 01       	movw	r30, r18
 c6e:	20 81       	ld	r18, Z
 c70:	22 60       	ori	r18, 0x02	; 2
 c72:	fc 01       	movw	r30, r24
 c74:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS12);
 c76:	8e e4       	ldi	r24, 0x4E	; 78
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	2e e4       	ldi	r18, 0x4E	; 78
 c7c:	30 e0       	ldi	r19, 0x00	; 0
 c7e:	f9 01       	movw	r30, r18
 c80:	20 81       	ld	r18, Z
 c82:	2b 7f       	andi	r18, 0xFB	; 251
 c84:	fc 01       	movw	r30, r24
 c86:	20 83       	st	Z, r18
		break;
 c88:	54 c0       	rjmp	.+168    	; 0xd32 <timer1_init+0x322>
	 case 256 :
		Clear_Bit(_TCCR1B,_CS10);
 c8a:	8e e4       	ldi	r24, 0x4E	; 78
 c8c:	90 e0       	ldi	r25, 0x00	; 0
 c8e:	2e e4       	ldi	r18, 0x4E	; 78
 c90:	30 e0       	ldi	r19, 0x00	; 0
 c92:	f9 01       	movw	r30, r18
 c94:	20 81       	ld	r18, Z
 c96:	2e 7f       	andi	r18, 0xFE	; 254
 c98:	fc 01       	movw	r30, r24
 c9a:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS11);
 c9c:	8e e4       	ldi	r24, 0x4E	; 78
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	2e e4       	ldi	r18, 0x4E	; 78
 ca2:	30 e0       	ldi	r19, 0x00	; 0
 ca4:	f9 01       	movw	r30, r18
 ca6:	20 81       	ld	r18, Z
 ca8:	2d 7f       	andi	r18, 0xFD	; 253
 caa:	fc 01       	movw	r30, r24
 cac:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_CS12);
 cae:	8e e4       	ldi	r24, 0x4E	; 78
 cb0:	90 e0       	ldi	r25, 0x00	; 0
 cb2:	2e e4       	ldi	r18, 0x4E	; 78
 cb4:	30 e0       	ldi	r19, 0x00	; 0
 cb6:	f9 01       	movw	r30, r18
 cb8:	20 81       	ld	r18, Z
 cba:	24 60       	ori	r18, 0x04	; 4
 cbc:	fc 01       	movw	r30, r24
 cbe:	20 83       	st	Z, r18
		break;
 cc0:	38 c0       	rjmp	.+112    	; 0xd32 <timer1_init+0x322>
	 case 1024 :
		Set_Bit(_TCCR1B,_CS10);
 cc2:	8e e4       	ldi	r24, 0x4E	; 78
 cc4:	90 e0       	ldi	r25, 0x00	; 0
 cc6:	2e e4       	ldi	r18, 0x4E	; 78
 cc8:	30 e0       	ldi	r19, 0x00	; 0
 cca:	f9 01       	movw	r30, r18
 ccc:	20 81       	ld	r18, Z
 cce:	21 60       	ori	r18, 0x01	; 1
 cd0:	fc 01       	movw	r30, r24
 cd2:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS11);
 cd4:	8e e4       	ldi	r24, 0x4E	; 78
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	2e e4       	ldi	r18, 0x4E	; 78
 cda:	30 e0       	ldi	r19, 0x00	; 0
 cdc:	f9 01       	movw	r30, r18
 cde:	20 81       	ld	r18, Z
 ce0:	2d 7f       	andi	r18, 0xFD	; 253
 ce2:	fc 01       	movw	r30, r24
 ce4:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_CS12);
 ce6:	8e e4       	ldi	r24, 0x4E	; 78
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	2e e4       	ldi	r18, 0x4E	; 78
 cec:	30 e0       	ldi	r19, 0x00	; 0
 cee:	f9 01       	movw	r30, r18
 cf0:	20 81       	ld	r18, Z
 cf2:	24 60       	ori	r18, 0x04	; 4
 cf4:	fc 01       	movw	r30, r24
 cf6:	20 83       	st	Z, r18
		break;
 cf8:	1c c0       	rjmp	.+56     	; 0xd32 <timer1_init+0x322>
	 default:
		Set_Bit(_TCCR1B,_CS10);
 cfa:	8e e4       	ldi	r24, 0x4E	; 78
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	2e e4       	ldi	r18, 0x4E	; 78
 d00:	30 e0       	ldi	r19, 0x00	; 0
 d02:	f9 01       	movw	r30, r18
 d04:	20 81       	ld	r18, Z
 d06:	21 60       	ori	r18, 0x01	; 1
 d08:	fc 01       	movw	r30, r24
 d0a:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS11);
 d0c:	8e e4       	ldi	r24, 0x4E	; 78
 d0e:	90 e0       	ldi	r25, 0x00	; 0
 d10:	2e e4       	ldi	r18, 0x4E	; 78
 d12:	30 e0       	ldi	r19, 0x00	; 0
 d14:	f9 01       	movw	r30, r18
 d16:	20 81       	ld	r18, Z
 d18:	2d 7f       	andi	r18, 0xFD	; 253
 d1a:	fc 01       	movw	r30, r24
 d1c:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_CS12);
 d1e:	8e e4       	ldi	r24, 0x4E	; 78
 d20:	90 e0       	ldi	r25, 0x00	; 0
 d22:	2e e4       	ldi	r18, 0x4E	; 78
 d24:	30 e0       	ldi	r19, 0x00	; 0
 d26:	f9 01       	movw	r30, r18
 d28:	20 81       	ld	r18, Z
 d2a:	2b 7f       	andi	r18, 0xFB	; 251
 d2c:	fc 01       	movw	r30, r24
 d2e:	20 83       	st	Z, r18
		break;
 d30:	00 00       	nop
		
	}
	switch(mode)
 d32:	89 81       	ldd	r24, Y+1	; 0x01
 d34:	88 2f       	mov	r24, r24
 d36:	90 e0       	ldi	r25, 0x00	; 0
 d38:	81 30       	cpi	r24, 0x01	; 1
 d3a:	91 05       	cpc	r25, r1
 d3c:	09 f4       	brne	.+2      	; 0xd40 <timer1_init+0x330>
 d3e:	65 c0       	rjmp	.+202    	; 0xe0a <timer1_init+0x3fa>
 d40:	82 30       	cpi	r24, 0x02	; 2
 d42:	91 05       	cpc	r25, r1
 d44:	1c f4       	brge	.+6      	; 0xd4c <timer1_init+0x33c>
 d46:	89 2b       	or	r24, r25
 d48:	41 f0       	breq	.+16     	; 0xd5a <timer1_init+0x34a>
 d4a:	d0 c0       	rjmp	.+416    	; 0xeec <timer1_init+0x4dc>
 d4c:	82 30       	cpi	r24, 0x02	; 2
 d4e:	91 05       	cpc	r25, r1
 d50:	09 f4       	brne	.+2      	; 0xd54 <timer1_init+0x344>
 d52:	9d c0       	rjmp	.+314    	; 0xe8e <timer1_init+0x47e>
 d54:	03 97       	sbiw	r24, 0x03	; 3
 d56:	51 f1       	breq	.+84     	; 0xdac <timer1_init+0x39c>
 d58:	c9 c0       	rjmp	.+402    	; 0xeec <timer1_init+0x4dc>
	{
	 case NORMAL_MODE :
		_TCNT1 = 0 ;
 d5a:	8c e2       	ldi	r24, 0x2C	; 44
 d5c:	90 e0       	ldi	r25, 0x00	; 0
 d5e:	fc 01       	movw	r30, r24
 d60:	10 82       	st	Z, r1
		Clear_Bit(_TCCR1A,_WGM10);
 d62:	8f e4       	ldi	r24, 0x4F	; 79
 d64:	90 e0       	ldi	r25, 0x00	; 0
 d66:	2f e4       	ldi	r18, 0x4F	; 79
 d68:	30 e0       	ldi	r19, 0x00	; 0
 d6a:	f9 01       	movw	r30, r18
 d6c:	20 81       	ld	r18, Z
 d6e:	2e 7f       	andi	r18, 0xFE	; 254
 d70:	fc 01       	movw	r30, r24
 d72:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1A,_WGM11);
 d74:	8f e4       	ldi	r24, 0x4F	; 79
 d76:	90 e0       	ldi	r25, 0x00	; 0
 d78:	2f e4       	ldi	r18, 0x4F	; 79
 d7a:	30 e0       	ldi	r19, 0x00	; 0
 d7c:	f9 01       	movw	r30, r18
 d7e:	20 81       	ld	r18, Z
 d80:	2d 7f       	andi	r18, 0xFD	; 253
 d82:	fc 01       	movw	r30, r24
 d84:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_WGM12);
 d86:	8e e4       	ldi	r24, 0x4E	; 78
 d88:	90 e0       	ldi	r25, 0x00	; 0
 d8a:	2e e4       	ldi	r18, 0x4E	; 78
 d8c:	30 e0       	ldi	r19, 0x00	; 0
 d8e:	f9 01       	movw	r30, r18
 d90:	20 81       	ld	r18, Z
 d92:	27 7f       	andi	r18, 0xF7	; 247
 d94:	fc 01       	movw	r30, r24
 d96:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_WGM13);
 d98:	8e e4       	ldi	r24, 0x4E	; 78
 d9a:	90 e0       	ldi	r25, 0x00	; 0
 d9c:	2e e4       	ldi	r18, 0x4E	; 78
 d9e:	30 e0       	ldi	r19, 0x00	; 0
 da0:	f9 01       	movw	r30, r18
 da2:	20 81       	ld	r18, Z
 da4:	2f 7e       	andi	r18, 0xEF	; 239
 da6:	fc 01       	movw	r30, r24
 da8:	20 83       	st	Z, r18
		break;
 daa:	a0 c0       	rjmp	.+320    	; 0xeec <timer1_init+0x4dc>
		
	 case PHASE_PWM_MODE :
		_ICR1H = 0xFF ;
 dac:	87 e4       	ldi	r24, 0x47	; 71
 dae:	90 e0       	ldi	r25, 0x00	; 0
 db0:	2f ef       	ldi	r18, 0xFF	; 255
 db2:	fc 01       	movw	r30, r24
 db4:	20 83       	st	Z, r18
		_ICR1L = 0xFF ;
 db6:	86 e4       	ldi	r24, 0x46	; 70
 db8:	90 e0       	ldi	r25, 0x00	; 0
 dba:	2f ef       	ldi	r18, 0xFF	; 255
 dbc:	fc 01       	movw	r30, r24
 dbe:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1A,_WGM10);
 dc0:	8f e4       	ldi	r24, 0x4F	; 79
 dc2:	90 e0       	ldi	r25, 0x00	; 0
 dc4:	2f e4       	ldi	r18, 0x4F	; 79
 dc6:	30 e0       	ldi	r19, 0x00	; 0
 dc8:	f9 01       	movw	r30, r18
 dca:	20 81       	ld	r18, Z
 dcc:	2e 7f       	andi	r18, 0xFE	; 254
 dce:	fc 01       	movw	r30, r24
 dd0:	20 83       	st	Z, r18
		Set_Bit(_TCCR1A,_WGM11);
 dd2:	8f e4       	ldi	r24, 0x4F	; 79
 dd4:	90 e0       	ldi	r25, 0x00	; 0
 dd6:	2f e4       	ldi	r18, 0x4F	; 79
 dd8:	30 e0       	ldi	r19, 0x00	; 0
 dda:	f9 01       	movw	r30, r18
 ddc:	20 81       	ld	r18, Z
 dde:	22 60       	ori	r18, 0x02	; 2
 de0:	fc 01       	movw	r30, r24
 de2:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1B,_WGM12);
 de4:	8e e4       	ldi	r24, 0x4E	; 78
 de6:	90 e0       	ldi	r25, 0x00	; 0
 de8:	2e e4       	ldi	r18, 0x4E	; 78
 dea:	30 e0       	ldi	r19, 0x00	; 0
 dec:	f9 01       	movw	r30, r18
 dee:	20 81       	ld	r18, Z
 df0:	27 7f       	andi	r18, 0xF7	; 247
 df2:	fc 01       	movw	r30, r24
 df4:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_WGM13);
 df6:	8e e4       	ldi	r24, 0x4E	; 78
 df8:	90 e0       	ldi	r25, 0x00	; 0
 dfa:	2e e4       	ldi	r18, 0x4E	; 78
 dfc:	30 e0       	ldi	r19, 0x00	; 0
 dfe:	f9 01       	movw	r30, r18
 e00:	20 81       	ld	r18, Z
 e02:	20 61       	ori	r18, 0x10	; 16
 e04:	fc 01       	movw	r30, r24
 e06:	20 83       	st	Z, r18
		
		break;
 e08:	71 c0       	rjmp	.+226    	; 0xeec <timer1_init+0x4dc>
		
	 case CTC_MODE :
		_ICR1H = 0xFF ;
 e0a:	87 e4       	ldi	r24, 0x47	; 71
 e0c:	90 e0       	ldi	r25, 0x00	; 0
 e0e:	2f ef       	ldi	r18, 0xFF	; 255
 e10:	fc 01       	movw	r30, r24
 e12:	20 83       	st	Z, r18
		_ICR1L = 0xFF ;
 e14:	86 e4       	ldi	r24, 0x46	; 70
 e16:	90 e0       	ldi	r25, 0x00	; 0
 e18:	2f ef       	ldi	r18, 0xFF	; 255
 e1a:	fc 01       	movw	r30, r24
 e1c:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1A,_WGM10);
 e1e:	8f e4       	ldi	r24, 0x4F	; 79
 e20:	90 e0       	ldi	r25, 0x00	; 0
 e22:	2f e4       	ldi	r18, 0x4F	; 79
 e24:	30 e0       	ldi	r19, 0x00	; 0
 e26:	f9 01       	movw	r30, r18
 e28:	20 81       	ld	r18, Z
 e2a:	2e 7f       	andi	r18, 0xFE	; 254
 e2c:	fc 01       	movw	r30, r24
 e2e:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1A,_WGM11);
 e30:	8f e4       	ldi	r24, 0x4F	; 79
 e32:	90 e0       	ldi	r25, 0x00	; 0
 e34:	2f e4       	ldi	r18, 0x4F	; 79
 e36:	30 e0       	ldi	r19, 0x00	; 0
 e38:	f9 01       	movw	r30, r18
 e3a:	20 81       	ld	r18, Z
 e3c:	2d 7f       	andi	r18, 0xFD	; 253
 e3e:	fc 01       	movw	r30, r24
 e40:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_WGM12);
 e42:	8e e4       	ldi	r24, 0x4E	; 78
 e44:	90 e0       	ldi	r25, 0x00	; 0
 e46:	2e e4       	ldi	r18, 0x4E	; 78
 e48:	30 e0       	ldi	r19, 0x00	; 0
 e4a:	f9 01       	movw	r30, r18
 e4c:	20 81       	ld	r18, Z
 e4e:	28 60       	ori	r18, 0x08	; 8
 e50:	fc 01       	movw	r30, r24
 e52:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_WGM13);
 e54:	8e e4       	ldi	r24, 0x4E	; 78
 e56:	90 e0       	ldi	r25, 0x00	; 0
 e58:	2e e4       	ldi	r18, 0x4E	; 78
 e5a:	30 e0       	ldi	r19, 0x00	; 0
 e5c:	f9 01       	movw	r30, r18
 e5e:	20 81       	ld	r18, Z
 e60:	20 61       	ori	r18, 0x10	; 16
 e62:	fc 01       	movw	r30, r24
 e64:	20 83       	st	Z, r18
		Set_Bit(_TIFR,_OCF1A);
 e66:	88 e5       	ldi	r24, 0x58	; 88
 e68:	90 e0       	ldi	r25, 0x00	; 0
 e6a:	28 e5       	ldi	r18, 0x58	; 88
 e6c:	30 e0       	ldi	r19, 0x00	; 0
 e6e:	f9 01       	movw	r30, r18
 e70:	20 81       	ld	r18, Z
 e72:	20 61       	ori	r18, 0x10	; 16
 e74:	fc 01       	movw	r30, r24
 e76:	20 83       	st	Z, r18
		_OCR1AH = 0xFF ;
 e78:	8b e4       	ldi	r24, 0x4B	; 75
 e7a:	90 e0       	ldi	r25, 0x00	; 0
 e7c:	2f ef       	ldi	r18, 0xFF	; 255
 e7e:	fc 01       	movw	r30, r24
 e80:	20 83       	st	Z, r18
		_OCR1AL = 0xFF ;
 e82:	8a e4       	ldi	r24, 0x4A	; 74
 e84:	90 e0       	ldi	r25, 0x00	; 0
 e86:	2f ef       	ldi	r18, 0xFF	; 255
 e88:	fc 01       	movw	r30, r24
 e8a:	20 83       	st	Z, r18
		break;
 e8c:	2f c0       	rjmp	.+94     	; 0xeec <timer1_init+0x4dc>
		
	 case FAST_PWM_MODE :
		_ICR1H = 0xFF ;
 e8e:	87 e4       	ldi	r24, 0x47	; 71
 e90:	90 e0       	ldi	r25, 0x00	; 0
 e92:	2f ef       	ldi	r18, 0xFF	; 255
 e94:	fc 01       	movw	r30, r24
 e96:	20 83       	st	Z, r18
		_ICR1L = 0xFF ;
 e98:	86 e4       	ldi	r24, 0x46	; 70
 e9a:	90 e0       	ldi	r25, 0x00	; 0
 e9c:	2f ef       	ldi	r18, 0xFF	; 255
 e9e:	fc 01       	movw	r30, r24
 ea0:	20 83       	st	Z, r18
		Clear_Bit(_TCCR1A,_WGM10);
 ea2:	8f e4       	ldi	r24, 0x4F	; 79
 ea4:	90 e0       	ldi	r25, 0x00	; 0
 ea6:	2f e4       	ldi	r18, 0x4F	; 79
 ea8:	30 e0       	ldi	r19, 0x00	; 0
 eaa:	f9 01       	movw	r30, r18
 eac:	20 81       	ld	r18, Z
 eae:	2e 7f       	andi	r18, 0xFE	; 254
 eb0:	fc 01       	movw	r30, r24
 eb2:	20 83       	st	Z, r18
		Set_Bit(_TCCR1A,_WGM11);
 eb4:	8f e4       	ldi	r24, 0x4F	; 79
 eb6:	90 e0       	ldi	r25, 0x00	; 0
 eb8:	2f e4       	ldi	r18, 0x4F	; 79
 eba:	30 e0       	ldi	r19, 0x00	; 0
 ebc:	f9 01       	movw	r30, r18
 ebe:	20 81       	ld	r18, Z
 ec0:	22 60       	ori	r18, 0x02	; 2
 ec2:	fc 01       	movw	r30, r24
 ec4:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_WGM12);
 ec6:	8e e4       	ldi	r24, 0x4E	; 78
 ec8:	90 e0       	ldi	r25, 0x00	; 0
 eca:	2e e4       	ldi	r18, 0x4E	; 78
 ecc:	30 e0       	ldi	r19, 0x00	; 0
 ece:	f9 01       	movw	r30, r18
 ed0:	20 81       	ld	r18, Z
 ed2:	28 60       	ori	r18, 0x08	; 8
 ed4:	fc 01       	movw	r30, r24
 ed6:	20 83       	st	Z, r18
		Set_Bit(_TCCR1B,_WGM13);
 ed8:	8e e4       	ldi	r24, 0x4E	; 78
 eda:	90 e0       	ldi	r25, 0x00	; 0
 edc:	2e e4       	ldi	r18, 0x4E	; 78
 ede:	30 e0       	ldi	r19, 0x00	; 0
 ee0:	f9 01       	movw	r30, r18
 ee2:	20 81       	ld	r18, Z
 ee4:	20 61       	ori	r18, 0x10	; 16
 ee6:	fc 01       	movw	r30, r24
 ee8:	20 83       	st	Z, r18
		break;
 eea:	00 00       	nop
	}
	
	Set_Bit(_TIMSK,_OCIE1A);
 eec:	89 e5       	ldi	r24, 0x59	; 89
 eee:	90 e0       	ldi	r25, 0x00	; 0
 ef0:	29 e5       	ldi	r18, 0x59	; 89
 ef2:	30 e0       	ldi	r19, 0x00	; 0
 ef4:	f9 01       	movw	r30, r18
 ef6:	20 81       	ld	r18, Z
 ef8:	20 61       	ori	r18, 0x10	; 16
 efa:	fc 01       	movw	r30, r24
 efc:	20 83       	st	Z, r18
	Set_Bit(_TIMSK,_OCIE1B);
 efe:	89 e5       	ldi	r24, 0x59	; 89
 f00:	90 e0       	ldi	r25, 0x00	; 0
 f02:	29 e5       	ldi	r18, 0x59	; 89
 f04:	30 e0       	ldi	r19, 0x00	; 0
 f06:	f9 01       	movw	r30, r18
 f08:	20 81       	ld	r18, Z
 f0a:	28 60       	ori	r18, 0x08	; 8
 f0c:	fc 01       	movw	r30, r24
 f0e:	20 83       	st	Z, r18
}
 f10:	00 00       	nop
 f12:	0f 90       	pop	r0
 f14:	0f 90       	pop	r0
 f16:	0f 90       	pop	r0
 f18:	0f 90       	pop	r0
 f1a:	0f 90       	pop	r0
 f1c:	df 91       	pop	r29
 f1e:	cf 91       	pop	r28
 f20:	08 95       	ret

00000f22 <timer0_delay_ms>:

void timer0_delay_ms(uint32 n)
{
 f22:	cf 93       	push	r28
 f24:	df 93       	push	r29
 f26:	00 d0       	rcall	.+0      	; 0xf28 <timer0_delay_ms+0x6>
 f28:	00 d0       	rcall	.+0      	; 0xf2a <timer0_delay_ms+0x8>
 f2a:	00 d0       	rcall	.+0      	; 0xf2c <timer0_delay_ms+0xa>
 f2c:	cd b7       	in	r28, 0x3d	; 61
 f2e:	de b7       	in	r29, 0x3e	; 62
 f30:	6b 83       	std	Y+3, r22	; 0x03
 f32:	7c 83       	std	Y+4, r23	; 0x04
 f34:	8d 83       	std	Y+5, r24	; 0x05
 f36:	9e 83       	std	Y+6, r25	; 0x06
	_TCNT0 = 0 ;
 f38:	82 e5       	ldi	r24, 0x52	; 82
 f3a:	90 e0       	ldi	r25, 0x00	; 0
 f3c:	fc 01       	movw	r30, r24
 f3e:	10 82       	st	Z, r1
	_OCR0 = 62 ;
 f40:	8c e5       	ldi	r24, 0x5C	; 92
 f42:	90 e0       	ldi	r25, 0x00	; 0
 f44:	2e e3       	ldi	r18, 0x3E	; 62
 f46:	fc 01       	movw	r30, r24
 f48:	20 83       	st	Z, r18
	for (uint16 i = 0 ; i < n ; i++)
 f4a:	1a 82       	std	Y+2, r1	; 0x02
 f4c:	19 82       	std	Y+1, r1	; 0x01
 f4e:	1b c0       	rjmp	.+54     	; 0xf86 <timer0_delay_ms+0x64>
	{
	  // count one millisecond
      while(Get_Bit(_TIFR,_OCF0) == 0 );
 f50:	00 00       	nop
 f52:	88 e5       	ldi	r24, 0x58	; 88
 f54:	90 e0       	ldi	r25, 0x00	; 0
 f56:	fc 01       	movw	r30, r24
 f58:	80 81       	ld	r24, Z
 f5a:	88 2f       	mov	r24, r24
 f5c:	90 e0       	ldi	r25, 0x00	; 0
 f5e:	82 70       	andi	r24, 0x02	; 2
 f60:	99 27       	eor	r25, r25
 f62:	95 95       	asr	r25
 f64:	87 95       	ror	r24
 f66:	89 2b       	or	r24, r25
 f68:	a1 f3       	breq	.-24     	; 0xf52 <timer0_delay_ms+0x30>
      // clear the OC flag to be ready for another millisecond
	  Set_Bit(_TIFR,_OCF0);
 f6a:	88 e5       	ldi	r24, 0x58	; 88
 f6c:	90 e0       	ldi	r25, 0x00	; 0
 f6e:	28 e5       	ldi	r18, 0x58	; 88
 f70:	30 e0       	ldi	r19, 0x00	; 0
 f72:	f9 01       	movw	r30, r18
 f74:	20 81       	ld	r18, Z
 f76:	22 60       	ori	r18, 0x02	; 2
 f78:	fc 01       	movw	r30, r24
 f7a:	20 83       	st	Z, r18

void timer0_delay_ms(uint32 n)
{
	_TCNT0 = 0 ;
	_OCR0 = 62 ;
	for (uint16 i = 0 ; i < n ; i++)
 f7c:	89 81       	ldd	r24, Y+1	; 0x01
 f7e:	9a 81       	ldd	r25, Y+2	; 0x02
 f80:	01 96       	adiw	r24, 0x01	; 1
 f82:	9a 83       	std	Y+2, r25	; 0x02
 f84:	89 83       	std	Y+1, r24	; 0x01
 f86:	89 81       	ldd	r24, Y+1	; 0x01
 f88:	9a 81       	ldd	r25, Y+2	; 0x02
 f8a:	9c 01       	movw	r18, r24
 f8c:	40 e0       	ldi	r20, 0x00	; 0
 f8e:	50 e0       	ldi	r21, 0x00	; 0
 f90:	8b 81       	ldd	r24, Y+3	; 0x03
 f92:	9c 81       	ldd	r25, Y+4	; 0x04
 f94:	ad 81       	ldd	r26, Y+5	; 0x05
 f96:	be 81       	ldd	r27, Y+6	; 0x06
 f98:	28 17       	cp	r18, r24
 f9a:	39 07       	cpc	r19, r25
 f9c:	4a 07       	cpc	r20, r26
 f9e:	5b 07       	cpc	r21, r27
 fa0:	b8 f2       	brcs	.-82     	; 0xf50 <timer0_delay_ms+0x2e>
	  // count one millisecond
      while(Get_Bit(_TIFR,_OCF0) == 0 );
      // clear the OC flag to be ready for another millisecond
	  Set_Bit(_TIFR,_OCF0);
	}
}
 fa2:	00 00       	nop
 fa4:	26 96       	adiw	r28, 0x06	; 6
 fa6:	0f b6       	in	r0, 0x3f	; 63
 fa8:	f8 94       	cli
 faa:	de bf       	out	0x3e, r29	; 62
 fac:	0f be       	out	0x3f, r0	; 63
 fae:	cd bf       	out	0x3d, r28	; 61
 fb0:	df 91       	pop	r29
 fb2:	cf 91       	pop	r28
 fb4:	08 95       	ret

00000fb6 <_exit>:
 fb6:	f8 94       	cli

00000fb8 <__stop_program>:
 fb8:	ff cf       	rjmp	.-2      	; 0xfb8 <__stop_program>
